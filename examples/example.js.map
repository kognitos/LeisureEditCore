{
  "version": 3,
  "file": "example.js",
  "sourceRoot": "",
  "sources": [
    "example.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "OrgData example editor (based on Leisure)\r\n=========================================\r\nThis extends Data store and pushes parsing into the store instead of keeping\r\nit in the editing options and options delegate it to the store.\r\n\r\n    requirejs.config\r\n      paths:\r\n        fingertree:  '../build/fingertree'\r\n        jquery:      'jquery-2.1.3.min'\r\n        lodash:      '../build/lodash-4.17.2.min'\r\n\r\n    require ['./org', './docOrg', '../build/editor', 'jquery'], (Org, DocOrg, Editor, $)->\r\n      {\r\n        parseOrgMode\r\n        orgDoc\r\n        Source\r\n        Results\r\n        Headline\r\n        SimpleMarkup\r\n        Fragment\r\n      } = Org\r\n      {\r\n        orgDoc\r\n        getCodeItems\r\n        blockSource\r\n        blockOrg: docBlockOrg\r\n        ParsedCodeBlock\r\n        parseYaml\r\n      } = DocOrg\r\n      {\r\n        last\r\n        DataStore\r\n        DataStoreEditingOptions\r\n        blockText\r\n        posFor\r\n        escapeHtml\r\n        copyBlock\r\n        LeisureEditCore\r\n        set$\r\n      } = Editor\r\n\r\n      orgEditing = null\r\n      plainEditing = null\r\n      data = null\r\n\r\n      class OrgData extends DataStore\r\n        getBlock: (thing, changes)->\r\n          if typeof thing == 'object' then thing\r\n          else changes?.sets[thing] ? super(thing)\r\n        changesFor: (first, oldBlocks, newBlocks)->\r\n          changes = super first, oldBlocks, newBlocks\r\n          @linkAllSiblings changes\r\n          changes\r\n        load: (name, text)->\r\n          @makeChanges =>\r\n            @suppressTriggers => super name, text\r\n            @linkAllSiblings {first: @first, sets: @blocks, oldBlocks: [], newBlocks: @blockList()}\r\n            @trigger 'load'\r\n        parseBlocks: (text)-> parseOrgDoc text\r\n        nextSibling: (thing, changes)-> @getBlock @getBlock(thing, changes)?.nextSibling, changes\r\n        previousSibling: (thing, changes)-> @getBlock @getBlock(thing, changes).previousSibling, changes\r\n        reducePreviousSiblings: (thing, changes, func, arg)->\r\n          greduce @getBlock(thing, changes), changes, func, arg, (b)=> @getBlock b.previousSibling, changes\r\n        reduceNextSiblings: (thing, changes, func, arg)->\r\n          greduce @getBlock(thing, changes), changes, func, arg, (b)=> @getBlock b.nextSibling, changes\r\n        lastSibling: (thing, changes)-> @reduceNextSiblings thing, changes, ((x, y)-> y), null\r\n        firstSibling: (thing, changes)-> @reducePreviousSiblings thing, changes, ((x, y)-> y), null\r\n        parent: (thing, changes)-> @getBlock @firstSibling(thing, changes)?.prev, changes\r\n        properties: (thing)->\r\n          props = {}\r\n          bl = @getBlock thing\r\n          if bl.type != 'headline'\r\n            if bl.type == 'code'\r\n              _.defaults props, bl.codeAttributes\r\n              _.defaults props, bl.properties\r\n            else if bl.type == 'chunk' then _.defaults props, bl.properties\r\n            bl = @parent bl\r\n          while bl\r\n            @scrapePropertiesInto bl, props\r\n            bl = @parent bl\r\n          props\r\n        scrapePropertiesInto: (block, props)->\r\n          for child in @children block\r\n            if child.type == 'chunk' && child.properties && !_.isEmpty child.properties\r\n              _.defaults props, child.properties\r\n        firstChild: (thing, changes)->\r\n          if (block = @getBlock thing, changes) && (n = @getBlock block.next, changes) && !n.previousSibling\r\n            n\r\n        lastChild: (thing, changes)-> @lastSibling @firstChild(thing, changes), changes\r\n        children: (thing, changes)->\r\n          c = []\r\n          @reduceNextSiblings @firstChild(thing, changes), changes, ((x, y)-> c.push y), null\r\n          c\r\n\r\n`nextRight` returns the next thing in the tree after this subtree, which is just the\r\nnext sibling if there is one, otherwise it's the closest \"right uncle\" of this node\r\n\r\n        nextRight: (thing, changes)->\r\n          while thing\r\n            if sib = @nextSibling thing, changes then return sib\r\n            thing = @parent thing, changes\r\n          null\r\n\r\n`linkAllSiblings` -- modify changes so that the sibling links will be correct when the changes are applied.\r\n\r\n        linkAllSiblings: (changes)->\r\n          stack = []\r\n          parent = null\r\n          sibling = null\r\n          emptyNexts = {}\r\n          cur = @getBlock changes.first, changes\r\n          while cur\r\n            if cur.nextSibling then emptyNexts[cur._id] = cur\r\n            if cur.type == 'headline'\r\n              while parent && cur.level <= parent.level\r\n                [parent, sibling] = stack.pop()\r\n            else if cur.type == 'chunk' && cur.properties? && parent && !_(parent.propertiesBlocks).includes cur._id\r\n              if !parent.propertiesBlocks\r\n                parent.propertiesBlocks = []\r\n              parent.propertiesBlocks.push cur._id\r\n            if sibling\r\n              delete emptyNexts[sibling._id]\r\n              if sibling.nextSibling != cur._id\r\n                addChange(sibling, changes).nextSibling = cur._id\r\n              if cur.previousSibling != sibling._id\r\n                addChange(cur, changes).previousSibling = sibling._id\r\n            else if cur.previousSibling\r\n              delete addChange(cur, changes).previousSibling\r\n            sibling = cur\r\n            if cur.type == 'headline'\r\n              stack.push [parent, sibling]\r\n              parent = cur\r\n              sibling = null\r\n            cur = @getBlock cur.next, changes\r\n          for id, block of emptyNexts\r\n            delete addChange(block, changes).nextSibling\r\n\r\n      parseOrgDoc = (text)->\r\n        if text == '' then []\r\n        else orgDoc parseOrgMode(text.replace /\\r\\n/g, '\\n'), true\r\n\r\n      addChange = (block, changes)->\r\n        if !changes.sets[block._id]\r\n          changes.oldBlocks.push block\r\n          changes.newBlocks.push changes.sets[block._id] = copyBlock block\r\n        changes.sets[block._id]\r\n\r\n      greduce = (thing, changes, func, arg, next)->\r\n        if typeof changes == 'function'\r\n          next = arg\r\n          arg = func\r\n          func = changes\r\n        if thing && typeof arg == 'undefined'\r\n          arg = thing\r\n          thing = next thing\r\n        while thing\r\n          arg = func arg, thing\r\n          thing = next thing\r\n        arg\r\n\r\n      getId = (thing)-> if typeof thing == 'string' then thing else thing._id\r\n\r\n      class OrgEditing extends DataStoreEditingOptions\r\n        constructor: (data)->\r\n          super data\r\n          data.on 'load', => @editor.setHtml @editor.node[0], @renderBlocks()\r\n        blockLineFor: (node, offset)->\r\n          {block, offset} = @editor.blockOffset node, offset\r\n          @blockLine block, offset\r\n        blockLine: (block, offset)->\r\n          text = block.text.substring(0, offset)\r\n          lines = text.split('\\n')\r\n          line: lines.length\r\n          col: last(lines).length\r\n        lineInfo: (block, offset)->\r\n          if block\r\n            {line, col} = @blockLine block, offset\r\n            startBlock = block\r\n            docLine = line\r\n            while block.prev\r\n              block = @getBlock block.prev\r\n              docLine += block.text.split('\\n').length - 1\r\n            holder = @nodeForId startBlock._id\r\n            p = posFor @editor.domCursorForTextPosition(holder, offset)\r\n            line: docLine\r\n            col: col\r\n            blockLine: line\r\n            top: Math.round(p.top)\r\n            left: Math.round(p.left)\r\n          else {}\r\n        setEditor: (@editor)->\r\n          @editor.on 'moved', =>\r\n            {block, offset} = @editor.getSelectedBlockRange()\r\n            if block\r\n              {line, col, blockLine, top, left} = @lineInfo block, offset\r\n              if line\r\n                return @updateStatus \"line: #{numSpan line} col: #{numSpan col} block: #{block._id}:#{numSpan blockLine} top: #{numSpan top} left: #{numSpan left}\"\r\n            @updateStatus \"No selection\"\r\n\r\n      parent = (prev, next)->\r\n        prev.type == 'headline' && (next.type != 'headline' || prev.level < next.level)\r\n\r\n      siblings = (prev, next)->\r\n        (prev.type != 'headline' && next.type != 'headline') || (prev.type == next.type == 'headline' && prev.level == next.level)\r\n\r\n      class PlainEditing extends OrgEditing\r\n        nodeForId: (id)-> $(\"#plain-#{id}\")\r\n        idForNode: (node)-> node.id.match(/^plain-(.*)$/)?[1]\r\n        parseBlocks: (text)-> @data.parseBlocks text\r\n        renderBlock: (block)-> [\"<span id='plain-#{block._id}' data-block>#{escapeHtml block.text}</span>\", block.next]\r\n        updateStatus: (line)-> $(\"#plainStatus\").html line\r\n\r\n      class FancyEditing extends OrgEditing\r\n        changed: (changes)->\r\n          rendered = {}\r\n          for id, block of changes.removes\r\n            @removeBlock block\r\n          for block in changes.newBlocks\r\n            rendered[block._id] = true\r\n            @updateBlock block, changes.old[block._id]\r\n          for id, block of changes.sets\r\n            if !rendered[id] then @updateBlock block, changes.old[block._id]\r\n        nodeForId: (id)-> id && $(\"#fancy-#{getId id}\")\r\n        idForNode: (node)-> node.id.match(/^fancy-(.*)$/)?[1]\r\n        parseBlocks: (text)-> @data.parseBlocks text\r\n        removeBlock: (block)->\r\n          if (node = @nodeForId block._id).length\r\n            if block.type == 'headline'\r\n              content = node.children().filter('[data-content]')\r\n              content.children().filter('[data-block]').insertAfter(node)\r\n            node.remove()\r\n        updateBlock: (block, old)->\r\n          if (node = @nodeForId block._id).length\r\n            content = node.children().filter('[data-content]')\r\n            if block.type != old?.type || block.nextSibling != old?.nextSibling || block.previousSibling != old?.previousSibling || block.prev != old?.prev\r\n              if block.type != 'headline' && old.type == 'headline'\r\n                content.children().filter('[data-block]').insertAfter(node)\r\n              @insertUpdateNode block, node\r\n            if block.text != old?.text\r\n              if node.is '[data-headline]'\r\n                content.children().filter('[data-block]').insertAfter(node)\r\n              [html] = @renderBlock block, true\r\n              node = $(@editor.setHtml node[0], html, true)\r\n              content = node.children().filter('[data-content]')\r\n              if block.type == 'headline'\r\n                for child in @data.children block\r\n                  content.append @nodeForId child._id\r\n          else\r\n            node = $(\"<div></div>\")\r\n            @insertUpdateNode block, node\r\n            [html] = @renderBlock block, true\r\n            @editor.setHtml node[0], html, true\r\n        insertUpdateNode: (block, node)->\r\n          if (prev = @nodeForId @data.previousSibling block)?.length then prev.after node\r\n          else if !block.prev then @editor.node.prepend(node)\r\n          else if !block.previousSibling && (parentNode = @nodeForId(block.prev))?.is(\"[data-headline]\")\r\n            parentNode.children().filter(\"[data-content]\").children().first().after node\r\n          else if (next = @nodeForId @data.nextSibling block)?.length then next.before node\r\n          else @editor.node.append(node)\r\n        renderBlock: (block, skipChildren)->\r\n          html = if block.type == 'headline'\r\n            \"<div #{blockAttrs block} contenteditable='false'>#{blockLabel block}<div contenteditable='true' data-content>#{contentSpan block.text, 'text'}#{if !skipChildren then (@renderBlock(child)[0] for child in @data.children(block) ? []).join '' else ''}</div></div>\"\r\n          else if block.type == 'code'\r\n            \"<span #{blockAttrs block}>#{blockLabel block}#{escapeHtml block.text}</span>\"\r\n          else \"<span #{blockAttrs block}>#{blockLabel block}#{escapeHtml block.text}</span>\"\r\n          [html, @data.nextSibling(block)?._id || !@data.firstChild(block) && block.next]\r\n        updateStatus: (line)-> $(\"#orgStatus\").html line\r\n\r\n      numSpan = (n)-> \"<span class='status-num'>#{n}</span>\"\r\n\r\n      blockLabel = (block)->\r\n        \"<span class='blockLabel' contenteditable='false' data-noncontent>[#{block.type} #{block._id}]</span>\"\r\n\r\n      blockAttrs = (block)->\r\n        extra = ''\r\n        if block.type == 'headline' then extra += \" data-headline='#{escapeAttr block.level}'\"\r\n        \"id='fancy-#{escapeAttr block._id}' data-block='#{escapeAttr block._id}' data-type='#{escapeAttr block.type}'#{extra}\"\r\n\r\n      contentSpan = (str, type)->\r\n        str = escapeHtml str\r\n        if str then \"<span#{if type then \" data-org-type='#{escapeAttr type}'\" else ''}>#{str}</span>\" else ''\r\n\r\n      escapeAttr = (str)->\r\n        if typeof str == 'string' then str.replace /['\"&]/g, (c)->\r\n          switch c\r\n            when '\"' then '&quot;'\r\n            when \"'\" then '&#39;'\r\n            when '&' then '&amp;'\r\n        else str\r\n\r\n      displayStructure = (data)->\r\n        parentStack = []\r\n        info = \"\"\r\n        level = 0\r\n        cur = data.getBlock data.first\r\n        prevParent = null\r\n        checks = nextSibling: {}, previousSibling: {}, prev: {}\r\n        check = cur\r\n        prev = null\r\n        while check\r\n          checks.nextSibling[check.previousSibling] = check._id\r\n          checks.previousSibling[check.nextSibling] = check._id\r\n          checks.prev[check.next] = check._id\r\n          prev = check\r\n          check = data.getBlock check.next\r\n        while cur\r\n          bad = []\r\n          if cur.nextSibling != checks.nextSibling[cur._id] then bad.push 'nextSibling'\r\n          if cur.previousSibling != checks.previousSibling[cur._id] then bad.push 'previousSibling'\r\n          if cur.prev != checks.prev[cur._id] then bad.push 'prev'\r\n          if !cur.previousSibling\r\n            p = cur\r\n            while p = data.parent p\r\n              level++\r\n          info += \"#{('   ' for i in [0...level]).join ''}#{cur._id}#{checkStructure cur, bad}: #{JSON.stringify cur.text}\\n\"\r\n          if !cur.nextSibling then level = 0\r\n          cur = data.getBlock cur.next\r\n        $(\"#blocks\").html info\r\n\r\n      checkStructure = (block, bad)->\r\n        if bad.length\r\n          ' <span class=\"err\">[' + (\"#{err}: #{block[err]}\" for err in bad).join(', ') + ']</span>'\r\n        else ''\r\n\r\n      set$ $, (o)-> o instanceof $\r\n\r\n      $(document).ready ->\r\n        window.DATA = data = new OrgData()\r\n        data\r\n          .on 'change', (changes)-> displayStructure data\r\n          .on 'load', -> displayStructure data\r\n        window.ED = editor = new LeisureEditCore $(\"#fancyEditor\"), new FancyEditing data\r\n        window.ED2 = new LeisureEditCore $(\"#plainEditor\"), new PlainEditing data\r\n        setTimeout (->editor.loadURL \"example.lorg\"), 1\r\n"
  ]
}