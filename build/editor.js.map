{
  "version": 3,
  "file": "editor.js",
  "sourceRoot": "..",
  "sources": [
    "editor.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "eLeisureEditCore ([example editor](http://team-cthulhu.github.io/LeisureEditCore/examples/index.html))\r\n===============\r\nCopyright (C) 2015, Bill Burdick, Roy Riggs, TEAM CTHULHU\r\n\r\nLicensed with ZLIB license (see \"[License](#license)\", below).\r\n\r\nWelcome to LeisureEditCore!  Are you trying to make editable documents\r\nthat are more than just text editors or word processors?  This library\r\ntries to make it easier to make interesting editable documents.  You\r\ncan find it on [Github](https://github.com/TEAM-CTHULHU/LeisureEditCore).\r\nLeisureEditCore what [Leisure's](https://github.com/zot/Leisure)\r\neditor, extracted out into a small HTML5 library.  LeisureEditCore is\r\npluggable with an options object that contains customization hooks.\r\nCode and examples are in Coffeescript (a JS build is provided as a\r\nconvenience).\r\n\r\nBasic Idea\r\n==========\r\n\r\nLeisureEditCore edits a doubly-linked list of newline-terminated text\r\n\"blocks\" that can render as DOM nodes (and maybe in interesting ways!)\r\n\r\nThe rendered DOM tree contains the full text of the block list in the\r\nproper order, along with ids from the blocks.  Some of the text may\r\nnot be visible and there may be a lot of items in the rendered DOM\r\nthat are not in the blocks.  Also, the rendered DOM may have a nested\r\ntree-structure.\r\n\r\nWhen the user makes a change, the editor:\r\n\r\n  1. maps the cursor location in the DOM to the corresponding location in the blocks\r\n  2. changes block text, regenerating part of the blocks\r\n  3. rerenders the DOM corresponding to the changed blocks\r\n  4. replaces the new DOM into the page\r\n\r\n![Editor flow](editorFlow.png)\r\n\r\nOf course the editor supports [custom key bindings](#defaultBindings).\r\n\r\nUsing/Installing LeisureEditCore\r\n================================\r\nMake sure your webpage loads the javascript files in the `build` directory.  Follow\r\nthe instructions below to use it.\r\n\r\n[Here](http://team-cthulhu.github.io/LeisureEditCore/examples/index.html) is an example that edits org-mode text.\r\n\r\nBlocks\r\n------\r\n  * `_id`: the block id\r\n  * `text`: the text of the block\r\n  * `prev`: the id of the previous block (optional)\r\n  * `next`: the id of the next block (optional)\r\n  * EXTRA STUFF: you can store whatever extra things you like in your text blocks\r\n\r\nBlockOffsets\r\n------------\r\n{block: aBlock, offset: aNumber}\r\naBlock can be an id or a block\r\n\r\nEditor (see below for more detailed documentation)\r\n--------------------------------------------------\r\nAn instance of LeisureEditCore.  You must provide an HTML node to\r\ncontain the document contents and an options object to configure the\r\neditor.\r\n\r\nEditor options object (see below for more detailed documentation)\r\n-----------------------------------------------------------------\r\nDataStoreEditingOptions is the recommended options object but\r\nyou can also subclass BasicEditingOptions.\r\n\r\nData object (see below for more detailed documentation)\r\n-------------------------------------------------------\r\nManages the document.  It's responsible for parsing text into blocks,\r\naccessing the blocks, making changes, and converting between block\r\nlocations and document locations.\r\n\r\nBasic usage\r\n-----------\r\nTo use this in the recommended way...\r\n\r\n1. The code uses AMD style and depends on 'lodash', 'fingertree', and 'prelude' which you will probably need to map.  This is so that if you are using any of these packages, you won't have to include them more than once.\r\n1. Subclass DataStoreEditingOptions and provide a renderBlock(block) method\r\n1. Subclass DataStore and provide a parseBlocks(text) method\r\n1. Create an editor object with your options object on your data object\r\n1. Call the load(name, text) method on your options object\r\n\r\nIncluded packages\r\n=================\r\n- [DOMCursor](https://github.com/zot/DOMCursor) -- locating text in DOM trees\r\n- [Advice](advice.litcoffee) -- method advice\r\n\r\nThird-party packages we use (also included)\r\n===========================================\r\n- [lodash](https://lodash.com/) -- collection, FP, and async utilities\r\n- [fingertree](https://github.com/qiao/fingertree.js) -- the swiss army knife of data structures\r\n- [prelude](https://github.com/emmanueltouzery/prelude-ts) -- persistent data structures\r\n\r\nBuilding\r\n========\r\nIf you modify LeisureEditCore and want to build it, you can use the Cakefile.  It needs the\r\n`which` npm package (`npm install which`).\r\n\r\n<a name=\"license\"></a>License\r\n=============================\r\nLicensed with ZLIB license.\r\n\r\nThis software is provided 'as-is', without any express or implied\r\nwarranty. In no event will the authors be held liable for any damages\r\narising from the use of this software.\r\n\r\nPermission is granted to anyone to use this software for any purpose,\r\nincluding commercial applications, and to alter it and redistribute it\r\nfreely, subject to the following restrictions:\r\n\r\n1. The origin of this software must not be misrepresented; you must not\r\nclaim that you wrote the original software. If you use this software\r\nin a product, an acknowledgment in the product documentation would be\r\nappreciated but is not required.\r\n\r\n2. Altered source versions must be plainly marked as such, and must not be\r\nmisrepresented as being the original software.\r\n\r\n3. This notice may not be removed or altered from any source distribution.\r\n\r\nLeisureEditCore\r\n===============\r\nCreate a LeisureEditCore object like this: `new LeisureEditCore editorElement, options`.\r\n\r\n`editorElement` is the HTML element that you want to contain editable text.\r\n\r\n`options` is an object that tells LeisureEditCore things like how to\r\nconvert text to a list of block objects (see below).  See\r\nBasicEditingOptions and DataStoreEditingOptions for more info.\r\n\r\n    DOMCursor = window.DOMCursor?.DOMCursor\r\n    prefix = window.EDROOT ? '.'\r\n\r\n    define [prefix + '/fingertree.js', prefix + '/prelude_ts.js', prefix + '/advice.js', prefix + '/lodash-4.17.2.min.js'], (Fingertree, Prelude, Advice, _)->\r\n      if DOMCursor then selectRange = DOMCursor.selectRange\r\n      {\r\n        beforeMethod\r\n        afterMethod\r\n        changeAdvice\r\n      } = Advice\r\n      Set = Prelude.HashSet\r\n      imbeddedBoundary = /.\\b./\r\n      maxLastKeys = 4\r\n      BS = 8\r\n      ENTER = 13\r\n      DEL = 46\r\n      TAB = 9\r\n      LEFT = 37\r\n      UP = 38\r\n      RIGHT = 39\r\n      DOWN = 40\r\n      HOME = 36\r\n      END = 35\r\n      PAGEUP = 33\r\n      PAGEDOWN = 34\r\n      specialKeys = {}\r\n      specialKeys[TAB] = 'TAB'\r\n      specialKeys[ENTER] = 'ENTER'\r\n      specialKeys[BS] = 'BS'\r\n      specialKeys[DEL] = 'DEL'\r\n      specialKeys[LEFT] = 'LEFT'\r\n      specialKeys[RIGHT] = 'RIGHT'\r\n      specialKeys[UP] = 'UP'\r\n      specialKeys[DOWN] = 'DOWN'\r\n      specialKeys[PAGEUP] = 'PAGEUP'\r\n      specialKeys[PAGEDOWN] = 'PAGEDOWN'\r\n      specialKeys[HOME] = 'HOME'\r\n      specialKeys[END] = 'END'\r\n      hiddenParent = document.createElement('div')\r\n      selectionMark = 'LEISURE_SELECTION_MARK'\r\n\r\n      hiddenParent.style.display = 'none'\r\n      document.body.append(hiddenParent)\r\n\r\n      window.EditorSetDomCursor = (DOMCursor)-> selectRange = DOMCursor.selectRange\r\n\r\nKey funcs\r\n---------\r\n\r\nBasic functions used by [defaultBindings](#defaultBindings)\r\n\r\n      useEvent = (e)->\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n      keyFuncs =\r\n        backwardChar: (editor, e, r)->\r\n          useEvent e\r\n          editor.moveSelectionBackward r\r\n          false\r\n        forwardChar: (editor, e, r)->\r\n          useEvent e\r\n          editor.moveSelectionForward r\r\n          false\r\n        previousLine: (editor, e, r)->\r\n          useEvent e\r\n          editor.moveSelectionUp r\r\n          false\r\n        nextLine: (editor, e, r)->\r\n          useEvent e\r\n          editor.moveSelectionDown r\r\n          false\r\n        stabilizeCursor: (editor, e, r)->\r\n          setTimeout (-> editor.domCursorForCaret().moveCaret()), 1\r\n          false\r\n\r\n<a name=\"defaultBindings\"></a>Default key bindings\r\n--------------------------------------------------\r\n\r\nThese are the default bindings.  You can set the editor's bindings\r\nproperty to this or your own object (which can inherit from this, of\r\ncourse.)\r\n\r\n      defaultBindings =\r\n        #'C-S': keyFuncs.save\r\n        'C-Z': -> alert 'UNDO not supported yet'\r\n        'C-S-Z': -> alert 'REDO not supported yet'\r\n        'C-Y': -> alert 'REDO not supported yet'\r\n        'UP': keyFuncs.previousLine\r\n        'DOWN': keyFuncs.nextLine\r\n        'LEFT': keyFuncs.backwardChar\r\n        'RIGHT': keyFuncs.forwardChar\r\n        'HOME': keyFuncs.stabilizeCursor\r\n        'END': keyFuncs.stabilizeCursor\r\n        'C-HOME': keyFuncs.stabilizeCursor\r\n        'C-END': keyFuncs.stabilizeCursor\r\n        #'TAB': keyFuncs.expandTemplate\r\n        #'C-C C-C': keyFuncs.swapMarkup\r\n        #'M-C': keyFuncs.execute\r\n        #'C-F': keyFuncs.forwardChar\r\n        #'C-B': keyFuncs.backwardChar\r\n        #'C-P': keyFuncs.previousLine\r\n        #'C-N': keyFuncs.nextLine\r\n        #'C-X C-F': keyFuncs.save\r\n      dragRange = null\r\n\r\n`idCounter`: id number for next created block\r\n\r\n      idCounter = 0\r\n\r\n      docReplacement = {}\r\n\r\nObservable class\r\n================\r\n\r\n      class Observable\r\n        constructor: ->\r\n          @listeners = {}\r\n          @suppressingTriggers = false\r\n        on: (type, callback)->\r\n          if typeof type == 'object'\r\n            for type, callback of type\r\n              @on type callback\r\n          else\r\n            if !@listeners[type] then @listeners[type] = []\r\n            @listeners[type].push callback\r\n          this\r\n        off: (type, callback)->\r\n          if typeof type == 'object'\r\n            for callbackType, callback of type\r\n              @off callbackType, callback\r\n          else\r\n            if @listeners[type]\r\n              @listeners[type] = @listeners[type].filter (l)-> l != callback\r\n          this\r\n        trigger: (type, args...)->\r\n          if !@suppressingTriggers\r\n            for listener in @listeners[type] || []\r\n              listener args...\r\n        suppressTriggers: (func)->\r\n          oldSuppress = @suppressingTriggers\r\n          @suppressingTriggers = true\r\n          try\r\n            func()\r\n          finally\r\n            @suppressingTriggers = oldSuppress\r\n\r\nFeatherJQ class\r\n===============\r\nA featherweight JQuery replacement.  Users can use set$ to make it use\r\nthe real jQuery, like this: `set$($, (obj)-> obj instanceof $)`\r\n\r\n      class FeatherJQ extends Array\r\n        constructor: (specs...)->\r\n          results = []\r\n          results.__proto__ = FeatherJQ.prototype\r\n          for spec in specs\r\n            results.pushResult spec\r\n          return results\r\n        find: (sel)->\r\n          results = $()\r\n          for node in this\r\n            if node.querySelectorAll?\r\n              for result in node.querySelectorAll(sel)\r\n                results.push result\r\n          results\r\n        attr: (name, value)->\r\n          if value?\r\n            for node in this\r\n              node.setAttribute name, value\r\n            this\r\n          else this[0]?getAttribute name\r\n        prop: (name, value)->\r\n          if value?\r\n            for node in this\r\n              node[name] = value\r\n            this\r\n          else this[0]?[name]\r\n        closest: (sel)->\r\n          result = $()\r\n          for node in this\r\n            if n = (if node.closest? then node else node.parentNode).closest sel\r\n              result.push n\r\n          result\r\n        is: (sel)->\r\n          for node in this\r\n            if node.matches? sel then return true\r\n          false\r\n        parent: ->\r\n          result = $()\r\n          for node in this\r\n            if p = node.parentNode then result.push p\r\n          result\r\n        data: (key, value)->\r\n          if !key then getUserData this[0], true\r\n          else if !value? then getUserData(this[0], true)?[key]\r\n          else for node in this\r\n            getUserData(node, true)[key] = value\r\n            this\r\n        on: (evtType, func)->\r\n          for node in this\r\n            evt = getEvents node\r\n            if !evt[evtType]\r\n              node.addEventListener evtType, runEvent\r\n              evt[evtType] = []\r\n            evt[evtType].push func\r\n        off: (evtType, func)->\r\n          for node in this when events = getEvents(node) && events[evtType]\r\n            events = if func then (h for h in events[evtType] when h != func) else []\r\n            if !events.length then delete events[evtType]\r\n        pushResult: (spec)->\r\n          if typeof spec == 'string'\r\n            try\r\n              @push document.querySelectorAll(spec)...\r\n            catch err\r\n              div = document.createElement 'div'\r\n              div.innerHTML = html\r\n              @push div.children...\r\n          #else if spec instanceof FeatherJQ then @push spec...\r\n          else if typeof spec == 'object' && spec.nodeName then @push spec\r\n          else if typeof spec == 'object' && spec.prop then @push spec...\r\n          else @push spec\r\n\r\n      $ = (args...)-> new FeatherJQ(args...)\r\n\r\n      is$ = (obj)-> obj instanceof FeatherJQ || (obj.prop && obj.attr)\r\n\r\n      set$ = (new$, is$Func)->\r\n        $ = new$\r\n        is$ = is$Func || is$\r\n\r\n      FJQData = new WeakMap\r\n\r\n      runEvent = (evt)->\r\n        for handler in getEvents(evt.currentTarget) ? []\r\n          handler evt\r\n        null\r\n\r\n      getNodeData = (node, create)->\r\n        if create || FJQData.has node\r\n          if !FJQData.has node then FJQData.set node, {}\r\n          FJQData.get node\r\n\r\n      getDataProperty = (node, prop, create)->\r\n        if d = getNodeData node, create\r\n          if !d[prop] then d[prop] = {}\r\n          d[prop]\r\n\r\n      getUserData = (node, create)-> if node then getDataProperty node, 'userData', create\r\n\r\n      getEvents = (node, create)-> getDataProperty node, 'events', create\r\n\r\n      $.ajax = ({url, success, data})->\r\n        xhr = new XMLHttpRequest\r\n        xhr.onreadystatechange = ->\r\n            if xhr.readyState == XMLHttpRequest.DONE then success xhr.responseText\r\n        xhr.open (if data then 'POST' else 'GET'), url, true\r\n        xhr.send data\r\n\r\n      $.get = (url, success)-> $.ajax {url, success}\r\n        \r\n\r\nLeisureEditCore class\r\n=====================\r\nEvents:\r\n  `moved`: the cursor moved\r\n\r\n      class LeisureEditCore extends Observable\r\n        constructor: (@node, @options)->\r\n          super()\r\n          @bindingRegistry = {}\r\n          @lastDocReplacement = null\r\n          @editing = false\r\n          @node\r\n            .attr 'contenteditable', 'true'\r\n            .attr 'spellcheck', 'false'\r\n          @node.data().editor = this\r\n          @curKeyBinding = @prevKeybinding = null\r\n          @bind()\r\n          @lastKeys = []\r\n          @modCancelled = false\r\n          @clipboardKey = null\r\n          @ignoreModCheck = 0\r\n          @movementGoal = null\r\n          @options.setEditor this\r\n          @currentSelectedBlock = null\r\n        initBindings: (name, f)->\r\n          bindings = @bindingRegistry[name]\r\n          if !@bindingRegistry[name]\r\n            @bindingRegistry[name] = bindings = {}\r\n            f bindings\r\n          bindings\r\n        editWith: (func)->\r\n          @editing = true\r\n          try\r\n            func()\r\n          finally\r\n            @editing = false\r\n        savePosition: (func)->\r\n          if @editing then func()\r\n          else\r\n            pos = @getSelectedDocRange()\r\n            try\r\n              func()\r\n            catch\r\n              @selectDocRange pos\r\n        getCopy: (id)-> copyBlock @options.getBlock id\r\n        getText: -> @options.getText()\r\n        blockForCaret: -> @blockForNode @domCursorForCaret().node\r\n        blockForNode: (node)-> @options.getBlock @options.idForNode node\r\n        blockNodeForNode: (node)-> @options.nodeForId @options.idForNode node\r\n        blockTextForNode: (node)->\r\n          parent = @blockNodeForNode(node)[0]\r\n          if next = @options.getBlock(@options.idForNode node)?.next\r\n            nextPos = @domCursorForText @options.nodeForId(next), 0\r\n            @domCursorForText(parent, 0, parent).getTextTo nextPos\r\n          else @domCursorForText(parent, 0, parent).getText()\r\n        adjustDocRange: (dr, repl)->\r\n          if !repl || (repl == @lastDocReplacement) || repl.start >= dr.start\r\n            return\r\n          @lastDocReplacement = repl\r\n          dr.start += repl.text.length - repl.end + repl.start\r\n        verifyNode: (node)->\r\n          if typeof node == 'string' then node = @options.nodeForId node\r\n          @blockTextForNode(node) == @options.getBlock(@options.idForNode node).text\r\n        verifyAllNodes: ->\r\n          badIds = []\r\n          block = @options.getBlock @options.getFirst()\r\n          while block\r\n            if (node = @options.nodeForId(block._id)[0]) && !@verifyNode node\r\n              badIds.push block._id\r\n            block = @options.getBlock block.next\r\n          if badIds.length then badIds\r\n        domCursor: (node, pos)->\r\n          if is$ node\r\n            node = node[0]\r\n            pos = pos ? 0\r\n          else if node instanceof DOMCursor\r\n            pos = node.pos\r\n            node = node.node\r\n          @options.domCursor(node, pos)\r\n        domCursorForText: (node, pos, parent)->\r\n          c = @domCursor node, pos\r\n            .filterTextNodes()\r\n            .firstText()\r\n          if parent? then c.filterParent parent else c\r\n        domCursorForTextPosition: (parent, pos, contain)->\r\n          @domCursorForText parent, 0, (if contain then parent)\r\n            .mutable()\r\n            .forwardChars pos, contain\r\n            .adjustForNewline()\r\n        domCursorForCaret: (e)->\r\n          sel = getSelection()\r\n          if sel.type == 'None' then DOMCursor.emptyDOMCursor\r\n          else\r\n            r = sel.getRangeAt 0\r\n            n = @domCursor r.startContainer, r.startOffset\r\n              .mutable()\r\n              .filterVisibleTextNodes()\r\n              .filterParent @node[0]\r\n              .firstText()\r\n            if e && !n.isEmpty() && r.startContainer == n.node && r.startOffset == n.pos && r.collapsed && (rc = r.getClientRects()) && rc.length == 2 && rc[1].y + rc[1].height < e.clientY\r\n              n.forwardChar()\r\n            if n.isEmpty() || n.pos <= n.node.length then n else n.next()\r\n        getTextPosition: (parent, target, pos)->\r\n          if parent\r\n            targ = @domCursorForText target, pos\r\n            if !@options.getContainer(targ.node) then targ = targ.prev()\r\n            @domCursorForText parent, 0, parent\r\n              .mutable()\r\n              .countChars targ.node, targ.pos\r\n          else -1\r\n        #loadURL: (url)-> $.get url, (text)=> @options.load url, text\r\n        loadURL: (url)-> fetch(url).then((resp)=> resp.text()).then (text)=> @options.load url, text\r\n        domCursorForDocOffset: (dOff)->\r\n          bOff = @options.blockOffsetForDocOffset dOff\r\n          node = @options.nodeForId bOff.block\r\n          @domCursorForText(node, 0, @node[0]).mutable().forwardChars bOff.offset\r\n        moveCaretForVisibleNewlines: (pos, e)->\r\n          dc = if typeof pos == 'number' then @domCursorForDocOffset(pos)\r\n          else if pos && 'type' in pos && 'node' in pos then pos\r\n          else @domCursorForCaret(e)\r\n          if dc.type == 'text' && dc.pos == 0 && (dc.node.textContent[0] == '\\n' || dc.isCollapsed())\r\n            dc = dc.prev()\r\n          dc.moveCaret()\r\n        docOffsetForCaret: ->\r\n          s = getSelection()\r\n          if s.type == 'None' then -1\r\n          else\r\n            range = s.getRangeAt 0\r\n            @docOffset range.startContainer, range.startOffset\r\n        docOffsetForBlockOffset: (block, offset)->\r\n          @options.docOffsetForBlockOffset block, offset\r\n        docOffset: (node, offset)->\r\n          if node instanceof Range\r\n            offset = node.startOffset\r\n            node = node.startContainer\r\n          else if node instanceof DOMCursor\r\n            offset = node.pos\r\n            node = node.node\r\n          if startHolder = @options.getContainer(node)\r\n            @options.docOffsetForBlockOffset @options.idForNode(startHolder), @getTextPosition startHolder, node, offset\r\n        getSelectedDocRange: ->\r\n          s = getSelection()\r\n          if s.type == 'None' then type: 'None'\r\n          else\r\n            range = s.getRangeAt 0\r\n            if (start = @docOffset range.startContainer, range.startOffset)?\r\n              if s.type == 'Caret' then length = 0\r\n              else\r\n                end = @docOffset range.endContainer, range.endOffset\r\n                length = Math.abs start - end\r\n                start = Math.min start, end\r\n              type: s.type\r\n              start: start\r\n              length: length\r\n              scrollTop: @node[0].scrollTop\r\n              scrollLeft: @node[0].scrollLeft\r\n            else type: 'None'\r\n        selectDocRange: (range)->\r\n          if range.type != 'None' && !(start = @domCursorForDocOffset(range.start).save()).isEmpty()\r\n            selectRange start.range(start.mutable().forwardChars range.length)\r\n            @node[0].scrollTop = range.scrollTop\r\n            @node[0].scrollLeft = range.scrollLeft\r\n        getSelectedBlockRange: ->\r\n          s = getSelection()\r\n          if s.type != 'None' && p = @blockOffset s.getRangeAt(0)\r\n            p.type = s.type\r\n            p.length = @selectedText(s).length\r\n            p\r\n          else type: 'None'\r\n        blockOffset: (node, offset)->\r\n          if node instanceof Range\r\n            offset = node.startOffset\r\n            node = node.startContainer\r\n          else if node instanceof DOMCursor\r\n            offset = node.pos\r\n            node = node.node\r\n          if startHolder = @options.getContainer(node)\r\n            block: @options.getBlock @options.idForNode startHolder\r\n            offset: @getTextPosition startHolder, node, offset\r\n        blockRangeForOffsets: (start, length)->\r\n          {block, offset} = @options.getBlockOffsetForPosition start\r\n          {block, offset, length, type: if length == 0 then 'Caret' else 'Range'}\r\n        replace: (e, br, text, select)-> if br.type != 'None'\r\n          @editWith =>\r\n            start = @options.docOffsetForBlockOffset(br)\r\n            pos = @getSelectedDocRange()\r\n            text = text ? getEventChar e\r\n            @options.replaceText {start, end: start + br.length, text, source: 'edit'}\r\n            if select\r\n              pos.type = if text.length == 0 then 'Caret' else 'Range'\r\n              pos.length = text.length\r\n            else\r\n              pos.type = 'Caret'\r\n              pos.length = 0\r\n              pos.start += text.length\r\n            @selectDocRange pos\r\n        backspace: (event, sel, r)->\r\n          if sel.type == 'Range' then return @cutText event\r\n          holderId = @idAtCaret sel\r\n          @currentBlockIds = [holderId]\r\n          @handleDelete event, sel, false\r\n        del: (event, sel, r)->\r\n          if sel.type == 'Range' then return @cutText event\r\n          holderId = @idAtCaret sel\r\n          @currentBlockIds = [holderId]\r\n          @handleDelete event, sel, true\r\n        idAtCaret: (sel)-> @options.idForNode @options.getContainer(sel.anchorNode)\r\n        selectedText: (s)->\r\n          r = s.getRangeAt(0)\r\n          if r.collapsed then ''\r\n          else @domCursor(r.startContainer, r.startOffset).getTextTo @domCursor(r.endContainer, r.endOffset)\r\n        cutText: (e)->\r\n          useEvent e\r\n          sel = getSelection()\r\n          if sel.type == 'Range'\r\n            html = _.map(sel.getRangeAt(0).cloneContents().childNodes, htmlForNode).join ''\r\n            text = @selectedText sel\r\n            @options.simulateCut html: html, text: text\r\n            r = @getSelectedDocRange()\r\n            @replace e, @getSelectedBlockRange(), ''\r\n            @selectDocRange\r\n              type: 'Caret'\r\n              start: r.start\r\n              length: 0\r\n              scrollTop: r.scrollTop\r\n              scrollLeft: r.scrollLeft\r\n        handleDelete: (e, s, forward)->\r\n          useEvent e\r\n          r = @getSelectedDocRange()\r\n          if r.type == 'None' || (r.type == 'Caret' && ((forward && r.start >= @options.getLength() - 1) || (!forward && r.start == 0)))\r\n            return\r\n          if r.type == 'Caret'\r\n            r.length = 1\r\n            if !forward then r.start -= 1\r\n          @options.replaceText\r\n            start: r.start\r\n            end: r.start + r.length\r\n            text: ''\r\n            source: 'edit'\r\n          @selectDocRange\r\n            type: 'Caret'\r\n            start: r.start\r\n            length: 0\r\n            scrollTop: r.scrollTop\r\n            scrollLeft: r.scrollLeft\r\n        bind: ->\r\n          @bindDragAndDrop()\r\n          @bindClipboard()\r\n          @bindMouse()\r\n          @bindKeyboard()\r\n        bindDragAndDrop: ->\r\n          @node.on 'dragover', (e)=>\r\n            @options.dragOver e.originalEvent\r\n            true\r\n          @node.on 'dragenter', (e)=>\r\n            @options.dragEnter  e.originalEvent\r\n            true\r\n          @node.on 'drop', (e)=>\r\n            useEvent e\r\n            oe = e.originalEvent\r\n            oe.dataTransfer.dropEffect = 'move'\r\n            r = document.caretRangeFromPoint oe.clientX, oe.clientY\r\n            dropPos = @domCursor(r.startContainer, r.startOffset).moveCaret()\r\n            dropContainer = @domCursor @options.getContainer(r.startContainer), 0\r\n            blockId = @options.idForNode dropContainer.node\r\n            offset = dropContainer.countChars dropPos\r\n            insertText = oe.dataTransfer.getData('text/plain')\r\n            insert = => @replace e, {type: 'Caret', offset, block: @options.getBlock(blockId), length: 0}, insertText, false\r\n            if dragRange\r\n              start = @domCursor(@options.nodeForId(dragRange.block._id), 0).forwardChars dragRange.offset\r\n              r2 = start.range start.forwardChars dragRange.length\r\n              insertOffset = @options.getPositionForBlock(@options.getBlock blockId) + offset\r\n              cutOffset = @options.getPositionForBlock(dragRange.block) + dragRange.offset\r\n              if cutOffset <= insertOffset <= cutOffset + dragRange.length\r\n                useEvent oe\r\n                oe.dataTransfer.dropEffect = 'none'\r\n                return\r\n              dr = dragRange\r\n              dragRange = null\r\n              if insertOffset <= cutOffset\r\n                @replace e, dr, '', false\r\n                @replace e, @blockRangeForOffsets(insertOffset, 0), insertText, false\r\n              else\r\n                insert()\r\n                @replace e, @blockRangeForOffsets(cutOffset, dr.length), '', false\r\n            else insert()\r\n            true\r\n          @node.on 'dragstart', (e)=>\r\n            sel = getSelection()\r\n            if sel.type == 'Range'\r\n              dragRange = @getSelectedBlockRange()\r\n              clipboard = e.originalEvent.dataTransfer\r\n              clipboard.setData 'text/html', _.map(sel.getRangeAt(0).cloneContents().childNodes, htmlForNode).join ''\r\n              clipboard.setData 'text/plain', @selectedText sel\r\n              clipboard.effectAllowed = 'copyMove'\r\n              clipboard.dropEffect = 'move'\r\n            true\r\n          @node[0].addEventListener 'dragend', (e)=>\r\n            if dr = dragRange\r\n              dragRange = null\r\n              if e.dataTransfer.dropEffect == 'move'\r\n                useEvent e\r\n                sel = @getSelectedDocRange()\r\n                @replace e, dr, ''\r\n                @selectDocRange sel\r\n        bindClipboard: ->\r\n          @node.on 'cut', (e)=> @handleCut e\r\n          @node.on 'copy', (e)=> @handleCopy e\r\n          @node.on 'paste', (e)=> @handlePaste e\r\n\r\n        handleCut: (e)->\r\n          useEvent e\r\n          sel = getSelection()\r\n          if sel.type == 'Range'\r\n            clipboard = e.originalEvent.clipboardData\r\n            clipboard.setData 'text/html', _.map(sel.getRangeAt(0).cloneContents().childNodes, htmlForNode).join ''\r\n            clipboard.setData 'text/plain', @selectedText sel\r\n            @replace e, @getSelectedBlockRange(), ''\r\n\r\n        handleCopy: (e)->\r\n          useEvent e\r\n          sel = getSelection()\r\n          if sel.type == 'Range'\r\n            clipboard = e.originalEvent.clipboardData\r\n            clipboard.setData 'text/html', _.map(sel.getRangeAt(0).cloneContents().childNodes, htmlForNode).join ''\r\n            clipboard.setData 'text/plain', @selectedText sel\r\n\r\n        handlePaste: (e)->\r\n          useEvent e\r\n          @replace e, @getSelectedBlockRange(), e.originalEvent.clipboardData.getData('text/plain'), false\r\n\r\n        bindMouse: ->\r\n          @node.on 'mousedown', (e)=>\r\n            if e.target instanceof HTMLInputElement then return\r\n            if @lastDragRange && e.originalEvent.detail == 2\r\n              @dragRange = @lastDragRange\r\n              console.log \"double click\"\r\n              start = @domCursor(@dragRange).mutable()\r\n              end = start.copy()\r\n              txt = start.char()\r\n              while true\r\n                start.backwardChar()\r\n                if !start.isEmpty() && start.type == 'text' then txt = start.char() + txt\r\n                if start.isEmpty() || start.type != 'text' || txt.match imbeddedBoundary\r\n                  #start.forwardChar()\r\n                  break\r\n              txt = end.char()\r\n              while true\r\n                end.forwardChar()\r\n                if !end.isEmpty() && end.type == 'text' then txt += end.char()\r\n                if end.isEmpty() || end.type != 'text' || txt.match imbeddedBoundary\r\n                  end.backwardChar()\r\n                  break\r\n              s = getSelection()\r\n              s.removeAllRanges()\r\n              @dragRange.setStart start.node, start.pos\r\n              @dragRange.setEnd end.node, end.pos\r\n              s.addRange @dragRange\r\n              e.preventDefault()\r\n            else if @dragRange = @getAdjustedCaretRange e\r\n              @domCursor(@dragRange).moveCaret()\r\n              e.preventDefault()\r\n            @mouseDown(e)\r\n            @trigger 'moved', this\r\n            @setCurKeyBinding null\r\n          @node.on 'mouseup', (e)=>\r\n            if e.target instanceof HTMLInputElement then return\r\n            @lastDragRange = @dragRange\r\n            @dragRange = null\r\n            @mouseUp e\r\n            @trigger 'moved', this\r\n          @node.on 'mousemove', (e)=>\r\n            if e.target instanceof HTMLInputElement then return\r\n            if @dragRange\r\n              s = getSelection()\r\n              s.removeAllRanges()\r\n              s.addRange @dragRange\r\n              r2 = @getAdjustedCaretRange e, true\r\n              s.extend r2.startContainer, r2.startOffset\r\n              e.preventDefault()\r\n        mouseDown: (e)-> @adjustCaretAfterMouseClick(e)\r\n        mouseUp: (e)-> @adjustSelection e\r\n        adjustCaretAfterMouseClick: (e)->\r\n          requestAnimationFrame(()=> @moveCaretForVisibleNewlines(null, e.originalEvent))\r\n        getAdjustedCaretRange: (e, returnUnchanged) ->\r\n          r = document.caretRangeFromPoint e.clientX, e.clientY\r\n          r2 = @domCursor(r).backwardChar().range()\r\n          rect1 = r.getBoundingClientRect()\r\n          rect2 = r2.getBoundingClientRect()\r\n          if rect1.top == rect2.top && rect1.bottom == rect2.bottom && rect2.left < rect1.left && e.clientX <= (rect1.left + rect2.left) / 2\r\n            r2\r\n          else if returnUnchanged then r\r\n        bindKeyboard: ->\r\n          @node.on 'keyup', (e)=> @handleKeyup e\r\n          @node.on 'keydown', (e)=>\r\n            @modCancelled = false\r\n            c = eventChar e\r\n            if !@addKeyPress e, c then return\r\n            s = getSelection()\r\n            r = s.rangeCount > 0 && s.getRangeAt(0)\r\n            @currentBlockIds = @blockIdsForSelection s, r\r\n            [bound, checkMod] = @findKeyBinding e, r\r\n            if bound then @modCancelled = !checkMod\r\n            else\r\n              @modCancelled = false\r\n              if c == ENTER then @enter e\r\n              else if c == BS\r\n                useEvent e\r\n                @backspace e, s, r\r\n              else if c == DEL\r\n                useEvent e\r\n                @del e, s, r\r\n              else if (modifyingKey c, e) && !isAlphabetic e\r\n                @char = getEventChar e\r\n                @keyPress e\r\n          #@node.on 'keypress', (e)=> if !e.altKey && !e.metaKey && !e.ctrlKey then @keyPress e\r\n          @node.on 'keypress', (e)=> this.handleKeypress e\r\n        enter: (e)->\r\n          useEvent e\r\n          @replace e, @getSelectedBlockRange(), '\\n', false\r\n        handleKeypress: (e)->\r\n          if e.originalEvent.target instanceof HTMLInputElement then return\r\n          if !e.altKey && !e.metaKey && !e.ctrlKey then @keyPress e\r\n        keyPress: (e)->\r\n          useEvent e\r\n          @replace e, @getSelectedBlockRange(), null, false\r\n        blockIdsForSelection: (sel, r)->\r\n          if !sel then sel = getSelection()\r\n          if sel.rangeCount == 1\r\n            if !r then r = sel.getRangeAt 0\r\n            blocks = if cont = @options.getContainer(r.startContainer)\r\n              [@options.idForNode cont]\r\n            else []\r\n            if !r?.collapsed\r\n              cur = blocks[0]\r\n              end = @options.idForNode @options.getContainer(r.endContainer)\r\n              while cur && cur != end\r\n                if cur = (@getCopy cur).next\r\n                  blocks.push cur\r\n            blocks\r\n        setCurKeyBinding: (f)->\r\n          @prevKeybinding = @curKeyBinding\r\n          @curKeyBinding = f\r\n        addKeyPress: (e, c)->\r\n          if e.originalEvent.target instanceof HTMLInputElement then return false\r\n          if notShift = !shiftKey c\r\n            e.DE_editorShiftkey = true\r\n            @lastKeys.push modifiers(e, c)\r\n            while @lastKeys.length > maxLastKeys\r\n              @lastKeys.shift()\r\n            @keyCombos = new Array maxLastKeys\r\n            for i in [0...Math.min(@lastKeys.length, maxLastKeys)]\r\n              @keyCombos[i] = @lastKeys[@lastKeys.length - i - 1 ... @lastKeys.length].join ' '\r\n            @keyCombos.reverse()\r\n          notShift\r\n        findKeyBinding: (e, r)->\r\n          n = r.startContainer\r\n          if n.nodeType == n.TEXT_NODE then n = n.parentElement\r\n          for k in @keyCombos\r\n            if f = @findFirstBinding n, k\r\n              @lastKeys = []\r\n              @keyCombos = []\r\n              @setCurKeyBinding f\r\n              return [true, f this, e, r]\r\n          @setCurKeyBinding null\r\n          [false]\r\n        findFirstBinding: (el, k)->\r\n          while el = el.closest('[data-keymap]')\r\n            bindings = @bindingRegistry[el.getAttribute 'data-keymap']\r\n            if bindings && bindings[k] then return bindings[k]\r\n            el = el.parentElement\r\n        handleKeyup: (e)->\r\n          if @ignoreModCheck = @ignoreModCheck then @ignoreModCheck--\r\n          if @clipboardKey || (!e.DE_shiftkey && !@modCancelled && modifyingKey(eventChar(e), e))\r\n            @options.keyUp()\r\n            @clipboardKey = null\r\n        adjustSelection: (e)->\r\n          if e.detail == 1 then return\r\n          s = getSelection()\r\n          if s.type == 'Range'\r\n            r = s.getRangeAt 0\r\n            pos = @domCursor r.endContainer, r.endOffset\r\n              .mutable()\r\n              .filterVisibleTextNodes()\r\n              .firstText()\r\n            while !pos.isEmpty() && pos.node != r.startContainer && pos.node.data.trim() == ''\r\n              pos = pos.prev()\r\n            while !pos.isEmpty() && pos.pos > 0 && pos.node.data[pos.pos - 1] == ' '\r\n              pos.pos--\r\n            if (pos.node != r.startContainer || pos.pos > r.startOffset) && (pos.node != r.endContainer || pos.pos < r.endOffset)\r\n              r.setEnd pos.node, pos.pos\r\n              selectRange r\r\n        moveSelectionForward: -> @showCaret @moveForward()\r\n        moveSelectionDown: -> @showCaret @moveDown()\r\n        moveSelectionBackward: -> @showCaret @moveBackward()\r\n        moveSelectionUp: -> @showCaret @moveUp()\r\n        showCaret: (pos)->\r\n          if pos.isEmpty() then pos = pos.prev()\r\n          #pos = @domCursorForCaret()\r\n          if pos.type == 'text' && pos.pos == 0 && pos.node.textContent[0] == '\\n'\r\n            pos = pos.prev()\r\n          pos.moveCaret()\r\n          (if pos.node.nodeType == pos.node.TEXT_NODE then pos.node.parentNode else pos.node).scrollIntoViewIfNeeded()\r\n          @trigger 'moved', this\r\n        moveForward: ->\r\n          sel = getSelection()\r\n          offset = if sel.type == 'None' then 0\r\n          else\r\n            r = sel.getRangeAt(0)\r\n            offset = if r.endContainer == r.startContainer\r\n              @docOffset r.endContainer, Math.max r.startOffset, r.endOffset\r\n            else @docOffset r.endContainer, r.endOffset\r\n          start = pos = @domCursorForCaret().firstText().save()\r\n          if !pos.isEmpty() && @options.isValidDocOffset(offset) && (@domCursorForCaret().firstText().equals(start) || pos.isCollapsed())\r\n            pos = @domCursorForDocOffset offset\r\n            while !pos.isEmpty() && !pos.isCharacter() && (@domCursorForCaret().firstText().equals(start) || pos.isCollapsed())\r\n              if pos.isCollapsed()\r\n                pos.next().moveCaret()\r\n              else pos.forwardChars(1).moveCaret()\r\n          if pos.isEmpty()\r\n            offset = @options.getLength() - 1\r\n            pos = @domCursorForDocOffset(offset).firstText()\r\n            while !pos.isEmpty() && pos.isCollapsed()\r\n              pos = @domCursorForDocOffset --offset\r\n          else if !@options.isValidDocOffset(offset)\r\n            pos = start\r\n          pos.moveCaret()\r\n        moveBackward: ->\r\n          sel = getSelection()\r\n          offset = if sel.type == 'None' then 0\r\n          else\r\n            r = sel.getRangeAt(0)\r\n            offset = if r.endContainer == r.startContainer\r\n              @docOffset r.endContainer, Math.min r.startOffset, r.endOffset\r\n            else @docOffset r.startContainer, r.startOffset\r\n          start = pos = @domCursorForCaret().firstText().save()\r\n          if !pos.isEmpty() && (@domCursorForCaret().firstText().equals(start) || pos.isCollapsed())\r\n            pos = @domCursorForDocOffset offset\r\n            while !pos.isEmpty() && !pos.isCharacter() && (@domCursorForCaret().firstText().equals(start) || pos.isCollapsed())\r\n              if pos.isCollapsed()\r\n                pos.prev()\r\n              else pos.backwardChar().moveCaret()\r\n          if pos.isEmpty()\r\n            offset = 0\r\n            pos = @domCursorForDocOffset(offset).firstText()\r\n            while !pos.isEmpty() && pos.isCollapsed()\r\n              pos = @domCursorForDocOffset ++offset\r\n          pos.moveCaret()\r\n        firstText: -> @domCursor(@node, 0).firstText().node\r\n        moveDown: ->\r\n          linePos = prev = pos = @domCursorForCaret().save()\r\n          if !(@prevKeybinding in [keyFuncs.nextLine, keyFuncs.previousLine])\r\n            @movementGoal = @options.blockColumn pos\r\n            line = 0\r\n          else line = (if pos.pos == 0 && pos.node == @firstText() && @options.blockColumn(pos) < @movementGoal then 1 else 0)\r\n          lineTop = posFor(linePos).top\r\n          lastPos = @docOffset(pos) - 1\r\n          while !(pos = @moveForward()).isEmpty() && (docPos = @docOffset(pos)) != lastPos\r\n            lastPos = docPos\r\n            p = posFor(pos)\r\n            if lineTop < p.top\r\n              line++\r\n              pos = linePos = p.pos\r\n              lineTop = p.top\r\n            if line == 2 then return prev.moveCaret()\r\n            if line == 1 && @options.blockColumn(pos) >= @movementGoal\r\n              return @moveToBestPosition pos, prev, linePos\r\n            prev = pos\r\n          pos\r\n        moveUp: ->\r\n          linePos = prev = pos = @domCursorForCaret().save()\r\n          if !(@prevKeybinding in [keyFuncs.nextLine, keyFuncs.previousLine]) then @movementGoal = @options.blockColumn pos\r\n          line = 0\r\n          lastPos = @options.getLength()\r\n          while !(pos = @moveBackward()).isEmpty() && (docPos = @docOffset pos) != lastPos\r\n            lastPos = docPos\r\n            if linePos.differentLines pos\r\n              line++\r\n              linePos = pos\r\n            if line == 2 then return prev.moveCaret()\r\n            if line == 1 && @options.blockColumn(pos) <= @movementGoal\r\n              return @moveToBestPosition pos, prev, linePos\r\n            prev = pos\r\n          pos\r\n\r\n`moveToBestPosition(pos, prev, linePos)` tries to move the caret to the best position in the HTML text.  If pos is closer to the goal, return it, otherwise move to prev and return prev.\r\n\r\n        moveToBestPosition: (pos, prev, linePos)->\r\n          if linePos == pos || Math.abs(@options.blockColumn(pos) - @movementGoal) < Math.abs(@options.blockColumn(prev) - @movementGoal)\r\n            pos\r\n          else prev.moveCaret()\r\n\r\nSet html of an element and evaluate scripts so that document.currentScript is properly set\r\n\r\n        setHtml: (el, html, outer)->\r\n          if outer\r\n            prev = el.previousSibling\r\n            next = el.nextSibling\r\n            par = el.parentNode\r\n            hiddenParent.innerHTML = html\r\n            newEl = hiddenParent.firstChild\r\n            el.replaceWith(newEl)\r\n            el = newEl\r\n          else el.innerHTML = html\r\n          @activateScripts $(el)\r\n          el\r\n\r\n        activateScripts: (jq)->\r\n          if !activating\r\n            activating = true\r\n            try\r\n              for script in jq.find('script')\r\n                text = if !script.type || script.type.toLowerCase() == 'text/javascript'\r\n                  script.textContent\r\n                else if script.type.toLowerCase() == 'text/coffeescript'\r\n                  CoffeeScript.compile script.textContent, bare: true\r\n                else if script.type.toLowerCase() == 'text/literate-coffeescript'\r\n                  CoffeeScript.compile script.textContent, bare: true, literate: true\r\n                if text\r\n                  newScript = document.createElement 'script'\r\n                  newScript.type = 'text/javascript'\r\n                  if script.src then newScript.src = script.src\r\n                  newScript.textContent = text\r\n                  @setCurrentScript newScript\r\n                  script.parentNode.insertBefore newScript, script\r\n                  script.parentNode.removeChild script\r\n            finally\r\n              @setCurrentScript null\r\n              activating = false\r\n\r\n        setCurrentScript: (script)->\r\n          LeisureEditCore.currentScript = script\r\n\r\n      eventChar = (e)-> e.charCode || e.keyCode || e.which\r\n\r\n      isAlphabetic = (e)-> !e.altKey && !e.ctrlKey && !e.metaKey && (64 < eventChar(e) < 91)\r\n\r\nBasicEditingOptions class\r\n=========================\r\nBasicEditingOptions is an the options base class.\r\n\r\nEvents:\r\n  `load`: new text was loaded into the editor\r\n\r\nHook methods (required)\r\n-----------------------\r\n\r\n`renderBlock(block) -> [html, next]`: render a block (and potentially its children) and return the HTML and the next blockId if there is one\r\n\r\n  * Block DOM (DOM for a block) must be a single element with the same id as the block.\r\n  * Block DOM may contain nested block DOM.\r\n  * each block's DOM should have the same id as the block and have a data-block attribute\r\n  * non-editable parts of the DOM should have contenteditable=false\r\n  * completely skipped parts should be non-editable and have a data-noncontent attribute\r\n\r\nProperties of BasicEditingOptions\r\n---------------------------------\r\n* `blocks {id -> block}`: block table\r\n* `first`: id of first block\r\n* `bindings {keys -> binding(editor, event, selectionRange)}`: a map of bindings (can use LeisureEditCore.defaultBindings)\r\n\r\nMethods of BasicEditingOptions\r\n------------------------------\r\n* `getBlock(id) -> block?`: get the current block for id\r\n* `getContainer(node) -> Node?`: get block DOM node containing for a node\r\n* `getFirst() -> blockId`: get the first block id\r\n* `domCursor(node, pos) -> DOMCursor`: return a domCursor that skips over non-content\r\n* `keyUp(editor) -> void`: handle keyup after-actions\r\n* `topRect() -> rect?`: returns null or the rectangle of a toolbar at the page top\r\n* `blockColumn(pos) -> colNum`: returns the start column on the page for the current block\r\n* `load(el, text) -> void`: parse text into blocks and replace el's contents with rendered DOM\r\n\r\n      class BasicEditingOptions extends Observable\r\n\r\n        renderBlock: (block)-> throw new Error \"options.renderBlock(block) is not implemented\"\r\n\r\nHook methods (optional)\r\n-----------------------\r\n\r\n`simulateCut({html, text})`: The editor calls this when the user hits backspace or delete on selected text.\r\n\r\n        simulateCut: ({html, text})->\r\n\r\n`dragEnter(event)`: alter the drag-enter behavior.  If you want to cancel the drag, for\r\ninstance, call event.preventDefault() and set the dropEffect to 'none'\r\n\r\n        dragEnter: (event)->\r\n          if !event.dataTransfer.getData\r\n            useEvent event\r\n            event.dropEffect = 'none'\r\n\r\n`dragOver(event)`: alter the drag-enter behavior.  If you want to cancel the drag, for\r\ninstance, call event.preventDefault() and set the dropEffect to 'none'\r\n\r\n        dragOver: (event)->\r\n          if !event.dataTransfer.getData\r\n            useEvent event\r\n            event.dropEffect = 'none'\r\n\r\nMain code\r\n---------\r\n\r\n        constructor: ->\r\n          super()\r\n          @changeContext = null\r\n          @initData()\r\n\r\n        setDiagEnabled: (flag)->\r\n          changeAdvice this, flag,\r\n            renderBlocks: diag: wrapDiag\r\n            changed: diag: wrapDiag\r\n          if flag then @diag()\r\n\r\n        diag: -> @trigger 'diag', @editor.verifyAllNodes()\r\n\r\n        initData: ->\r\n\r\n`blocks {id -> block}`: block table\r\n\r\n          @blocks = {}\r\n\r\n`first`: id of first block\r\n\r\n          @first = null\r\n\r\n`getFirst() -> blockId`: get the first block id\r\n\r\n        getFirst: -> @first\r\n        nodeForId: (id)-> $(\"##{id}\")\r\n        idForNode: (node)-> $(node).prop 'id'\r\n        setEditor: (@editor)->\r\n        newId: -> @data.newId()\r\n\r\n`changeStructure(oldBlocks, newText)`: Compute blocks affected by transforming oldBlocks into newText\r\n\r\n        changeStructure: (oldBlocks, newText)->\r\n          computeNewStructure this, oldBlocks, newText\r\n        mergeChangeContext: (obj)-> @changeContext = _.merge {}, @changeContext ? {}, obj\r\n        clearChangeContext: -> @changeContext = null\r\n\r\n`getBlock(id) -> block?`: get the current block for id\r\n\r\n        getBlock: (id)-> @blocks[id]\r\n\r\n`bindings {keys -> binding(editor, event, selectionRange)}`: a map of bindings (can use LeisureEditCore.defaultBindings)\r\n\r\n        bindings: defaultBindings\r\n\r\n`blockColumn(pos) -> colNum`: returns the start column on the page for the current block\r\n\r\n        blockColumn: (pos)-> pos.textPosition().left\r\n\r\n`topRect() -> rect?`: returns null or the rectangle of a toolbar at the page top\r\n\r\n        topRect: -> null\r\n\r\n`keyUp(editor) -> void`: handle keyup after-actions\r\n\r\n        keyUp: ->\r\n\r\n`domCursor(node, pos) -> DOMCursor`: return a domCursor that skips over non-content\r\n\r\n        domCursor: (node, pos)->\r\n          new DOMCursor(node, pos).addFilter (n)-> (n.hasAttribute('data-noncontent') && 'skip') || true\r\n\r\n`getContainer(node) -> Node?`: get block DOM node containing for a node\r\n\r\n        getContainer: (node)->\r\n          if @editor.node[0].compareDocumentPosition(node) & Element.DOCUMENT_POSITION_CONTAINED_BY\r\n            $(node).closest('[data-block]')[0]\r\n          else if @editor.node[0] == node\r\n            $(node).find('[data-block]').first()[0]\r\n\r\n`load(name, text) -> void`: parse text into blocks and trigger a 'load' event\r\n\r\n        load: (name, text)->\r\n          @suppressTriggers => @replaceText {start: 0, end: @getLength(), text, source: 'edit'}\r\n          @rerenderAll()\r\n          @trigger 'load'\r\n        rerenderAll: ->\r\n          @editor.setHtml @editor.node[0], @renderBlocks()\r\n          if result = @validatePositions()\r\n            console.info \"NOTE: DISCREPENCY AT POSITION #{result.block._id}, #{result.offset},\",\r\n        blockCount: ->\r\n          c = 0\r\n          for b of @blocks\r\n            c++\r\n          c\r\n        blockList: ->\r\n          next = @getFirst()\r\n          while next\r\n            bl = @getBlock next\r\n            next = bl.next\r\n            bl\r\n        docOffsetForBlockOffset: (bOff, offset)-> @data.docOffsetForBlockOffset bOff, offset\r\n        blockOffsetForDocOffset: (dOff)-> @data.blockOffsetForDocOffset dOff\r\n        getPositionForBlock: (block)->\r\n          cur = @getBlock @getFirst()\r\n          offset = 0\r\n          while cur._id != block._id\r\n            offset += cur.text.length\r\n            cur = @getBlock cur.next\r\n          offset\r\n        getBlockOffsetForPosition: (pos)->\r\n          cur = @getBlock @getFirst()\r\n          while pos >= cur.text.length\r\n            pos -= cur.text.length\r\n            cur = @getBlock cur.next\r\n          block: cur\r\n          offset: pos\r\n        renderBlocks: ->\r\n          result = ''\r\n          next = @getFirst()\r\n          while next && [html, next] = @renderBlock @getBlock next\r\n            result += html\r\n          result\r\n        getText: ->\r\n          text = ''\r\n          block = @data.getBlock @data.getFirst()\r\n          while block\r\n            text += block.text\r\n            block = @data.getBlock block.next\r\n          text\r\n        getLength: ->\r\n          len = 0\r\n          block = @getBlock @getFirst()\r\n          while block\r\n            len += block.text.length\r\n            block = @getBlock block.next\r\n          len\r\n        isValidDocOffset: (offset)-> 0 <= offset <= @getLength()\r\n        validatePositions: ->\r\n          block = @data.getBlock @data.getFirst()\r\n          while block\r\n            if node = @nodeForId(block._id)[0]\r\n              cursor = @domCursor(node, 0).mutable()\r\n              for offset in [0...block.text.length]\r\n                cursor = cursor.firstText()\r\n                if cursor.isEmpty() || !sameCharacter cursor.character(), block.text[offset]\r\n                  return {block, offset}\r\n                cursor.forwardChar()\r\n            block = @data.getBlock block.next\r\n\r\n      spaces = String.fromCharCode( 32, 160)\r\n\r\n      sameCharacter = (c1, c2)-> c1 == c2 || ((c1 in spaces) && (c2 in spaces))\r\n\r\n      computeNewStructure = (access, oldBlocks, newText)->\r\n        prev = oldBlocks[0]?.prev ? 0\r\n        oldBlocks = oldBlocks.slice()\r\n        oldText = null\r\n        offset = 0\r\n        if oldBlocks.length\r\n          while oldText != newText && (oldBlocks[0].prev || last(oldBlocks).next)\r\n            oldText = newText\r\n            if prev = access.getBlock oldBlocks[0].prev\r\n              oldBlocks.unshift prev\r\n              newText = prev.text + newText\r\n              offset += prev.text.length\r\n            if next = access.getBlock last(oldBlocks).next\r\n              oldBlocks.push next\r\n              newText += next.text\r\n            newBlocks = access.parseBlocks newText\r\n            if (!prev || prev.text == newBlocks[0].text) && (!next || next.text == last(newBlocks).text)\r\n              break\r\n        if !newBlocks then newBlocks = access.parseBlocks newText\r\n        while oldBlocks.length && newBlocks.length && oldBlocks[0].text == newBlocks[0].text\r\n          offset -= oldBlocks[0].text.length\r\n          prev = oldBlocks[0]._id\r\n          oldBlocks.shift()\r\n          newBlocks.shift()\r\n        while oldBlocks.length && newBlocks.length && last(oldBlocks).text == last(newBlocks).text\r\n          oldBlocks.pop()\r\n          newBlocks.pop()\r\n        oldBlocks: oldBlocks, newBlocks: newBlocks, offset: offset, prev: prev\r\n\r\n      copyBlock = (block)-> if !block then null else Object.assign {}, block\r\n\r\n      activating = false\r\n\r\nDataStore\r\n=========\r\nAn efficient block storage mechanism used by DataStoreEditingOptions\r\n\r\nHook methods -- you must define these in your subclass\r\n------------------------------------------------------\r\n* `parseBlocks(text) -> blocks`: parse text into array of blocks -- DO NOT provide _id, prev, or next, they may be overwritten!\r\n\r\nEvents\r\n------\r\nData objects support the Observable protocol and emit change events in response to data changes\r\n\r\n`change {adds, updates, removes, oldFirst, old}`\r\n\r\n  * `oldFirst id`: the previous first (might be the same as the current)\r\n  * `adds {id->true}`: added items\r\n  * `updates {id->true}`: updated items\r\n  * `removes {id->true}`: removed items\r\n  * `old {id->old block}`: the old items from updates and removes\r\n\r\nInternal API -- provide/override these if you want to change how the store accesses data\r\n----------------------------------------------------------------------------------------\r\n\r\n* `getFirst()`\r\n* `setFirst(firstId)`\r\n* `getBlock(id)`\r\n* `setBlock(id, block)`\r\n* `deleteBlock(id)`\r\n* `eachBlock(func(block [, id]))` -- iterate with func (exit if func returns false)\r\n* `load(first, blocks)` -- should trigger 'load'\r\n\r\nExternal API -- used from outside; alternative data objects must support these methods.\r\n---------------------------------------------------------------------------------------\r\n\r\nIn addition to the methods below, data objects must support the Observable protocol and emit\r\nchange events in response to data changes\r\n\r\n* `getFirst() -> id`: id of the first block\r\n* `getBlock(id) -> block`: the block for id\r\n* `load(name, text)`: replace the current document\r\n* `newId()`:\r\n* `docOffsetForBlockOffset(args...) -> offset`: args can be a blockOffset or block, offset\r\n* `blockOffsetForDocOffset(offset) -> blockOffset`: the block offset for a position in the document\r\n* `suppressTriggers(func) -> func's return value`: suppress triggers while executing func (inherited from Observable)\r\n\r\n<!-- -->\r\n\r\n      class DataStore extends Observable\r\n        constructor: ->\r\n          super()\r\n          @blocks = {}\r\n          @blockIndex = @newBlockIndex()\r\n          @changeCount = 0\r\n          @clearMarks()\r\n          @markNames = {}\r\n        load: (name, text)->\r\n          blockMap = {}\r\n          newBlocks = @parseBlocks text\r\n          for block, i in newBlocks\r\n            block._id = @newId()\r\n            blockMap[block._id] = block\r\n            if prev = newBlocks[i - 1]\r\n              prev.next = block._id\r\n              block.prev = prev._id\r\n          @first = newBlocks[0]?._id\r\n          @blocks = blockMap\r\n          @makeChanges =>\r\n            @indexBlocks()\r\n            @trigger 'load'\r\n\r\n`parseBlocks(text) -> blocks`: parse text into array of blocks -- DO NOT provide _id, prev, or next, they may be overwritten!\r\n\r\n        parseBlocks: (text)-> throw new Error \"options.parseBlocks(text) is not implemented\"\r\n\r\n        newBlockIndex: (contents)-> Fingertree.fromArray contents ? [],\r\n          identity: -> ids: Set.empty(), length: 0\r\n          measure: (v)-> ids: Set.of(v.id), length: v.length\r\n          sum: (a, b)-> ids: a.ids.addAll(b.ids), length: a.length + b.length\r\n        newId: -> \"block#{idCounter++}\"\r\n        setDiagEnabled: (flag)->\r\n          changeAdvice this, flag,\r\n            makeChanges: diag: afterMethod ->\r\n              if @changeCount == 0 then @diag()\r\n          if flag then @diag()\r\n\r\n`getLength() -> number`: the length of the entire document\r\n\r\n        getLength: -> @blockIndex.measure().length\r\n        makeChanges: (func)->\r\n          @changeCount++\r\n          try\r\n            func()\r\n          finally\r\n            @changeCount--\r\n        preserveSelectionWithMark: (func)->\r\n          editor = findEditor getSelection().anchorNode\r\n          if editor?.options?.data != this || @markNames[selectionMark] then return func()\r\n          if $(document.activeElement).is('input[input-number]')\r\n              return preserveSelection func\r\n          sel = editor.getSelectedDocRange()\r\n          m = @addMark selectionMark, sel.start\r\n          try\r\n            func()\r\n          finally\r\n            pos = @getMarkLocation selectionMark\r\n            @removeMark selectionMark\r\n            sel.start = pos\r\n            editor.selectDocRange sel\r\n        clearMarks: -> @marks = Fingertree.fromArray [],\r\n          identity: -> names: Set.empty(), length: 0\r\n          measure: (n)-> names: Set.of(n.name), length: n.offset\r\n          sum: (a, b)-> names: a.names.addAll(b.names), length: a.length + b.length\r\n        addMark: (name, offset)->\r\n          if @markNames[name] then @removeMark name\r\n          @markNames[name] = true\r\n          [first, rest] = @marks.split (m)-> m.length >= offset\r\n          l = first.measure().length\r\n          if !rest.isEmpty()\r\n            n = rest.peekFirst()\r\n            rest = rest.removeFirst().addFirst\r\n              offset: l + n.offset - offset\r\n              name: n.name\r\n          @marks = first.concat rest.addFirst\r\n            offset: offset - l\r\n            name: name\r\n        removeMark: (name)-> if @markNames[name]\r\n          delete @markNames[name]\r\n          [first, rest] = @marks.split (m)-> m.names.contains name\r\n          if !rest.isEmpty()\r\n            removed = rest.peekFirst()\r\n            rest = rest.removeFirst()\r\n            if !rest.isEmpty()\r\n              n = rest.peekFirst()\r\n              rest = rest.removeFirst()\r\n                .addFirst offset: removed.offset + n.offset, name: n.name\r\n          @marks = first.concat rest\r\n        listMarks: ->\r\n          m = []\r\n          t = @marks\r\n          while !t.isEmpty()\r\n            n = t.peekFirst()\r\n            m.push _.defaults {location: @getMarkLocation n.name}, n\r\n            t = t.removeFirst()\r\n          m\r\n        getMarkLocation: (name)-> if @markNames[name]\r\n          [first, rest] = @marks.split (m)-> m.names.contains name\r\n          if !rest.isEmpty() then first.measure().length + rest.peekFirst().offset\r\n        blockOffsetForMark: (name)-> if offset = @getMarkLocation name\r\n          @blockOffsetForDocOffset offset\r\n        floatMarks: (start, end, newLength)-> if newLength != oldLength = end - start\r\n          [first, rest] = @marks.split (m)-> m.length > start\r\n          if !rest.isEmpty()\r\n            n = rest.peekFirst()\r\n            @marks = first.concat rest.removeFirst().addFirst\r\n              name: n.name\r\n              offset: n.offset + newLength - oldLength\r\n        replaceText: ({start, end, text})->\r\n          {prev, oldBlocks, newBlocks} = @changesForReplacement start, end, text\r\n          if oldBlocks\r\n            docReplacement = {start, end, text}\r\n            aChange = @changesFor prev, oldBlocks.slice(), newBlocks.slice()\r\n            @floatMarks start, end, text.length\r\n            @change aChange\r\n            docReplacement = null\r\n        changesForReplacement: (start, end, text)->\r\n          {blocks, newText} = @blockOverlapsForReplacement start, end, text\r\n          {oldBlocks, newBlocks, offset, prev} = change = computeNewStructure this, blocks, newText\r\n          change.replacement = {start, end, length: text.length}\r\n          if oldBlocks.length || newBlocks.length then change else {}\r\n        computeRemovesAndNewBlockIds: (oldBlocks, newBlocks, newBlockMap, removes)->\r\n          for oldBlock in oldBlocks[newBlocks.length...oldBlocks.length]\r\n            removes[oldBlock._id] = oldBlock\r\n          prev = null\r\n          for newBlock, i in newBlocks\r\n            if oldBlock = oldBlocks[i]\r\n              newBlock._id = oldBlock._id\r\n              newBlock.prev = oldBlock.prev\r\n              newBlock.next = oldBlock.next\r\n            else\r\n              newBlock._id = @newId()\r\n              if prev then link prev, newBlock\r\n            prev = newBlockMap[newBlock._id] = newBlock\r\n          prev\r\n        patchNewBlocks: (first, oldBlocks, newBlocks, changes, newBlockMap, removes, prev)->\r\n          if !oldBlocks.length && first = @getBlock first\r\n            oldNext = @getBlock first.next\r\n            oldBlocks.unshift first\r\n            first = newBlockMap[first._id] = copyBlock first\r\n            link first, newBlocks[0]\r\n            newBlocks.unshift first\r\n            if oldNext\r\n              oldBlocks.push oldNext\r\n              oldNext = newBlockMap[oldNext._id] = copyBlock oldNext\r\n              link last(newBlocks), oldNext\r\n              newBlocks.push oldNext\r\n          else if oldBlocks.length != newBlocks.length\r\n            if !prev && prev = copyBlock oldPrev = @getBlock oldBlocks[0].prev\r\n              oldBlocks.unshift oldPrev\r\n              newBlocks.unshift prev\r\n              newBlockMap[prev._id] = prev\r\n            lastBlock = last oldBlocks\r\n            if next = copyBlock oldNext = @getBlock (if lastBlock then lastBlock.next else @getFirst())\r\n              oldBlocks.push oldNext\r\n              newBlocks.push next\r\n              newBlockMap[next._id] = next\r\n              if !(next.prev = prev?._id) then changes.first = next._id\r\n            if prev\r\n              if !first && ((newBlocks.length && !newBlocks[0].prev) || !oldBlocks.length || !@getFirst() || removes[@getFirst()])\r\n                changes.first = newBlocks[0]._id\r\n              prev.next = next?._id\r\n        changesFor: (first, oldBlocks, newBlocks)->\r\n          newBlockMap = {}\r\n          removes = {}\r\n          changes = {removes, sets: newBlockMap, first: @getFirst(), oldBlocks, newBlocks}\r\n          prev = @computeRemovesAndNewBlockIds oldBlocks, newBlocks, newBlockMap, removes\r\n          @patchNewBlocks first, oldBlocks, newBlocks, changes, newBlockMap, removes, prev\r\n          @removeDuplicateChanges newBlockMap\r\n          changes\r\n        removeDuplicateChanges: (newBlockMap)->\r\n          dups = []\r\n          for id, block of newBlockMap\r\n            if (oldBlock = @getBlock id) && block.text == oldBlock.text && block.next == oldBlock.next && block.prev == oldBlock.prev\r\n              dups.push id\r\n          for id of dups\r\n            delete newBlockMap[id]\r\n        checkChanges: -> if @changeCount == 0\r\n          throw new Error \"Attempt to make a change outside of makeChanges\"\r\n        setIndex: (i)->\r\n          @checkChanges()\r\n          @blockIndex = i\r\n        getFirst: -> @first\r\n        setFirst: (firstId)-> @first = firstId\r\n        getBlock: (id)-> @blocks[id]\r\n        setBlock: (id, block)->\r\n          @checkChanges()\r\n          @blocks[id] = block\r\n          @indexBlock block\r\n        deleteBlock: (id)->\r\n          @checkChanges()\r\n          delete @blocks[id]\r\n          @unindexBlock id\r\n        eachBlock: (func)->\r\n          block = @getBlock @getFirst()\r\n          while block && func(block, block._id) != false\r\n            block = @getBlock block.next\r\n          null\r\n        indexBlocks: ->\r\n          @checkChanges()\r\n          items = []\r\n          @eachBlock (block)=> items.push indexNode block\r\n          @setIndex @newBlockIndex items\r\n        splitBlockIndexOnId: (id)-> @blockIndex.split (m)-> m.ids.contains id\r\n        splitBlockIndexOnOffset: (offset)-> @blockIndex.split (m)-> m.length > offset\r\n        indexBlock: (block)-> if block\r\n          @checkChanges()\r\n          # if the block is indexed, it might be an easy case, otherwise unindex it\r\n          [first, rest] = @splitBlockIndexOnId block._id\r\n          if !rest.isEmpty() && rest.peekFirst().id == block._id &&\r\n            (next = rest.removeFirst()) &&\r\n            (if next.isEmpty() then !block.next else next.peekFirst().id == block.next) &&\r\n            (if first.isEmpty() then !block.prev else first.peekLast().id == block.prev)\r\n              return @setIndex first.addLast(indexNode block).concat next\r\n          if !rest.isEmpty() then @unindexBlock block._id\r\n          # if next is followed by prev, just insert the block in between\r\n          if (split = @fingerNodeOrder(block.prev, block.next)) && _.isArray split\r\n            [first, rest] = split\r\n            return @setIndex first.addLast(indexNode block).concat rest\r\n          # repair as much of the index as possible and insert the block\r\n          @insertAndRepairIndex block\r\n        fingerNode: (id)->\r\n          id && (node = @splitBlockIndexOnId(id)[1].peekFirst()) && node.id == id && node\r\n        fingerNodeOrder: (a, b)->\r\n          return !(a || b) ||\r\n          if !a && b then @fingerNode b\r\n          else if !b && a then @fingerNode a\r\n          else\r\n            [first, rest] = split = @splitBlockIndexOnId b\r\n            !first.isEmpty() && !rest.isEmpty() && rest.peekFirst()?.id == b && first.peekLast()?.id == a && split\r\n        # insert block into the index\r\n        # then trace forwards and backwards, repairing along the way\r\n        insertAndRepairIndex: (block)->\r\n          console.warn \"REPAIR\"\r\n          node = indexNode block\r\n          if block.next\r\n            prev = @getBlock block.prev\r\n            if !block.prev\r\n              @setIndex @blockIndex.addFirst indexNode block\r\n            else\r\n              [first, rest] = @splitBlockIndexOnId block.next\r\n              @setIndex first.addLast(node).concat rest\r\n          else if block.prev\r\n            [first, rest] = @splitBlockIndexOnId block.prev\r\n            @setIndex first.addLast(node).concat rest\r\n          else @setIndex @newBlockIndex [node]\r\n          mark = block\r\n          cur = @getBlock block.next\r\n          while cur && !@fingerNodeOrder mark._id, cur._id\r\n            @unindexBlock cur._id\r\n            [first, rest] = @splitBlockIndexOnId mark._id\r\n            @setIndex insertAfterSplit first, indexNode(cur), rest\r\n            mark = cur\r\n            cur = @getBlock cur.next\r\n          mark = block\r\n          cur = @getBlock block.prev\r\n          while cur && !@fingerNodeOrder cur._id, mark._id\r\n            @unindexBlock cur._id\r\n            [first, rest] = @splitBlockIndexOnId mark._id\r\n            @setIndex insertInSplit first, indexNode(cur), rest\r\n            mark = cur\r\n            cur = @getBlock cur.prev\r\n        unindexBlock: (id)->\r\n          @checkChanges()\r\n          if id\r\n            [first, rest] = @splitBlockIndexOnId id\r\n            if rest.peekFirst()?.id == id\r\n              @setIndex first.concat rest.removeFirst()\r\n\r\n`docOffsetForBlockOffset(args...) -> offset`: args can be a blockOffset or block, offset\r\n\r\n        docOffsetForBlockOffset: (block, offset)->\r\n          if typeof block == 'object'\r\n            offset = block.offset\r\n            block = block.block\r\n          @offsetForBlock(block) + offset\r\n        blockOffsetForDocOffset: (offset)->\r\n          results = @splitBlockIndexOnOffset offset\r\n          if !results[1].isEmpty()\r\n            block: results[1].peekFirst().id\r\n            offset: offset - results[0].measure().length\r\n          else\r\n            block: results[0].peekLast().id\r\n            offset: results[0].removeLast().measure().length\r\n        offsetForBlock: (blockOrId)->\r\n          id = if typeof blockOrId == 'string' then blockOrId else blockOrId._id\r\n          if @getBlock id then @splitBlockIndexOnId(id)[0].measure().length else 0\r\n        blockForOffset: (offset)->\r\n          results = @splitBlockIndexOnOffset offset\r\n          (results[1]?.peekFirst() ? results[0].peekLast).id\r\n        getDocLength: -> @blockIndex.measure().length\r\n        getDocSubstring: (start, end)->\r\n          startOffset = @blockOffsetForDocOffset start\r\n          endOffset = @blockOffsetForDocOffset end\r\n          block = @getBlock startOffset.block\r\n          text = ''\r\n          while block._id != endOffset.block\r\n            text += block.text\r\n            block = @getBlock block.next\r\n          if startOffset.block == endOffset.block\r\n            block.text.substring startOffset.offset, endOffset.offset\r\n          else text.substring(startOffset.offset) + block.text.substring 0, endOffset.offset\r\n\r\n`getText(): -> string`: the text for the entire document\r\n\r\n        getText: ->\r\n          text = ''\r\n          @eachBlock (block)-> text += block.text\r\n          text\r\n        check: ->\r\n          seen = {}\r\n          first = next = @getFirst()\r\n          prev = null\r\n          while next\r\n            prev = next\r\n            if seen[next] then throw new Error \"cycle in next links\"\r\n            seen[next] = true\r\n            oldBl = bl\r\n            bl = @getBlock next\r\n            if !bl then throw new Error \"Next of #{oldBl._id} doesn't exist\"\r\n            next = bl.next\r\n          @eachBlock (block)->\r\n            if block._id != first && !seen[block._id] then throw new Error \"#{block._id} not in next chain\"\r\n          seen = {}\r\n          lastBlock = prev\r\n          while prev\r\n            if seen[prev] then throw new Error \"cycle in prev links\"\r\n            seen[prev] = true\r\n            oldBl = bl\r\n            bl = @getBlock prev\r\n            if !bl then throw new Error \"Prev of #{oldBl._id} doesn't exist\"\r\n            prev = bl.prev\r\n          @eachBlock (block)->\r\n            if block._id != lastBlock && !seen[block._id] then throw new Error \"#{block._id} not in prev chain\"\r\n          null\r\n        blockList: ->\r\n          next = @getFirst()\r\n          while next\r\n            bl = @getBlock next\r\n            next = bl.next\r\n            bl\r\n        change: (changes)-> @trigger 'change', @makeChange changes\r\n        makeChange: ({first, sets, removes, oldBlocks, newBlocks})->\r\n          @makeChanges =>\r\n            {adds, updates, old} = result = {adds: {}, updates: {}, removes, old: {}, sets, oldFirst: @getFirst(), first: first, oldBlocks, newBlocks}\r\n            @setFirst first\r\n            for id of removes\r\n              if bl = @getBlock id\r\n                old[id] = bl\r\n                @deleteBlock id\r\n            for id, block of sets\r\n              if bl = @getBlock id\r\n                old[id] = bl\r\n                updates[id] = block\r\n              else adds[id] = block\r\n              @setBlock id, block\r\n            try\r\n              @check()\r\n            catch err\r\n              console.log err\r\n            result\r\n        indexArray: -> treeToArray @blockIndex\r\n        blockArray: ->\r\n          blocks = []\r\n          block = @getBlock @getFirst()\r\n          while block\r\n            blocks.push block\r\n            block = @getBlock block.next\r\n          blocks\r\n        diag: -> @trigger 'diag', @verifyIndex()\r\n        verifyIndex: ->\r\n          iArray = @indexArray()\r\n          treeIds = _.map iArray, _.property 'id'\r\n          bArray = @blockArray()\r\n          blockIds = _.map bArray, _.property '_id'\r\n          if !_.isEqual treeIds, blockIds\r\n            console.warn \"INDEX ERROR:\\nEXPECTED: #{JSON.stringify blockIds}\\nBUT GOT: #{JSON.stringify treeIds}\"\r\n          last = null\r\n          errs = new BlockErrors()\r\n          for node in iArray\r\n            if node.length != @getBlock(node.id)?.text.length\r\n              errs.badId node.id, 'bad index length'\r\n          offset = 0\r\n          @eachBlock (block)=>\r\n            last = block\r\n            if !@fingerNodeOrder block.prev, block._id\r\n              errs.badId block._id, 'bad order'\r\n              console.warn \"NODE ORDER WRONG FOR #{block.prev}, #{block._id}\"\r\n            if offset != @offsetForBlock block._id\r\n              errs.badId block._id, \"offset\"\r\n            if block.prev && @blockForOffset(offset - 1) != block.prev\r\n              errs.badId block._id, \"prev\"\r\n            if block.next && @blockForOffset(offset + block.text.length) != block.next\r\n              errs.badId block._id, \"next\"\r\n            offset += block.text.length\r\n          errs.errors()\r\n        blockOverlapsForReplacement: (start, end, text)->\r\n          startBlock = @getBlock @blockForOffset(start)\r\n          if !startBlock && start then startBlock = @getBlock @blockForOffset(start - 1)\r\n          endBlock = @getBlock @blockForOffset end\r\n          if !endBlock && end then endBlock = @getBlock @blockForOffset(end - 1)\r\n          blocks = [startBlock]\r\n          cur = startBlock\r\n          while cur != endBlock && cur.next\r\n            blocks.push cur = @getBlock cur.next\r\n          fullText = blockText blocks\r\n          offset = @offsetForBlock blocks[0]\r\n          blocks: blocks\r\n          blockText: fullText\r\n          newText: fullText.substring(0, start - offset) + text + (fullText.substring end - offset)\r\n\r\n      class BlockErrors\r\n        constructor: ->\r\n          @order = []\r\n          @ids = {}\r\n        isEmpty: -> !@order.length\r\n        badId: (id, msg)->\r\n          if !@ids[id]\r\n            @order.push id\r\n            @ids[id] = msg\r\n          else @ids[id] += \", #{msg}\"\r\n        errors: -> if !@isEmpty() then [id, \"(#{@ids[id]})\"] for id in @order\r\n\r\n      treeToArray = (tree)->\r\n        nodes = []\r\n        while !tree.isEmpty()\r\n          nodes.push tree.peekFirst()\r\n          tree = tree.removeFirst()\r\n        nodes\r\n\r\n      indexNode = (block)-> id: block._id, length: block.text.length\r\n\r\n      insertInSplit = (first, middle, rest)->\r\n        if first.isEmpty() then rest.addFirst middle\r\n        else if rest.isEmpty() then first.addLast middle\r\n        else first.addLast(middle).concat rest\r\n\r\n      insertAfterSplit = (first, afterMiddle, rest)->\r\n        next = rest.removeFirst().addFirst(afterMiddle)\r\n        if first.isEmpty() then next.addFirst rest.peekFirst()\r\n        else first.addLast(rest.peekFirst()).concat next\r\n\r\nDataStoreEditingOptions\r\n=======================\r\n\r\n      class DataStoreEditingOptions extends BasicEditingOptions\r\n        constructor: (@data)->\r\n          super()\r\n          @callbacks = {}\r\n          @addDataCallbacks\r\n            change: (changes)=> @dataChanged changes\r\n            load: => @dataLoaded()\r\n        addDataCallbacks: (cb)->\r\n          for type, func of cb\r\n            @data.on type, @callbacks[type] = func\r\n        dataChanged: (changes)-> @data.preserveSelectionWithMark => @changed changes\r\n        dataLoaded: -> @trigger 'load'\r\n        cleanup: -> @data.off @callbacks\r\n        initData: ->\r\n        load: (name, text)-> @data.load name, text\r\n        replaceText: (repl)-> @data.replaceText repl\r\n        getBlock: (id)-> @data.getBlock id\r\n        getFirst: (first)-> @data.getFirst()\r\n        change: (changes)-> if changes then @data.change changes\r\n        changed: (changes)-> @rerenderAll()\r\n        offsetForBlock: (blockOrId)-> @data.offsetForBlock blockOrId\r\n\r\nUtilities\r\n=========\r\n\r\n      isEditable = (n)->\r\n        n = if n.nodeType == n.TEXT_NODE then n.parentNode else n\r\n        n.isContentEditable\r\n\r\n      link = (prev, next)->\r\n        prev.next = next._id\r\n        next.prev = prev._id\r\n\r\n      blockText = (blocks)-> (block.text for block in blocks).join ''\r\n\r\ngetEventChar(e)\r\n--------------\r\nadapted from Vega on [StackOverflow](http://stackoverflow.com/a/13127566/1026782)\r\n\r\n      _to_ascii =\r\n        '188': '44'\r\n        '109': '45'\r\n        '190': '46'\r\n        '191': '47'\r\n        '192': '96'\r\n        '220': '92'\r\n        '222': '39'\r\n        '221': '93'\r\n        '219': '91'\r\n        '173': '45'\r\n        '187': '61' #IE Key codes\r\n        '186': '59' #IE Key codes\r\n        '189': '45' #IE Key codes\r\n\r\n      shiftUps =\r\n        \"96\": \"~\"\r\n        \"49\": \"!\"\r\n        \"50\": \"@\"\r\n        \"51\": \"#\"\r\n        \"52\": \"$\"\r\n        \"53\": \"%\"\r\n        \"54\": \"^\"\r\n        \"55\": \"&\"\r\n        \"56\": \"*\"\r\n        \"57\": \"(\"\r\n        \"48\": \")\"\r\n        \"45\": \"_\"\r\n        \"61\": \"+\"\r\n        \"91\": \"{\"\r\n        \"93\": \"}\"\r\n        \"92\": \"|\"\r\n        \"59\": \":\"\r\n        \"39\": \"\\\"\"\r\n        \"44\": \"<\"\r\n        \"46\": \">\"\r\n        \"47\": \"?\"\r\n\r\n      htmlForNode = (n)->\r\n        if n.nodeType == n.TEXT_NODE then escapeHtml n.data\r\n        else n.outerHTML\r\n\r\n      getEventChar = (e)->\r\n        if e.originalEvent.type == 'keypress' then String.fromCharCode eventChar e\r\n        else\r\n          c = (e.charCode || e.keyCode || e.which)\r\n          shifton = e.shiftKey || !!(e.modifiers & 4)\r\n          # normalize keyCode\r\n          if _to_ascii.hasOwnProperty(c) then c = _to_ascii[c]\r\n          if !shifton && (c >= 65 && c <= 90) then c = String.fromCharCode(c + 32)\r\n          else if e.shiftKey && shiftUps.hasOwnProperty(c)\r\n            # get shifted keyCode value\r\n            c = shiftUps[c]\r\n          else c = String.fromCharCode(c)\r\n          c\r\n\r\n      shiftKey = (c)-> 15 < c < 19\r\n\r\n      modifiers = (e, c)->\r\n        res = specialKeys[c] || String.fromCharCode(c)\r\n        if e.altKey then res = \"M-\" + res\r\n        if e.metaKey then res = \"M-\" + res\r\n        if e.ctrlKey then res = \"C-\" + res\r\n        if e.shiftKey then res = \"S-\" + res\r\n        res\r\n\r\n      modifyingKey = (c, e)-> !e.altKey && !e.metaKey && !e.ctrlKey && (\r\n        (47 < c < 58)          || # number keys\r\n        c == 32 || c == ENTER  || # spacebar and enter\r\n        c == BS || c == DEL    || # backspace and delete\r\n        (64 < c < 91)          || # letter keys\r\n        (95 < c < 112)         || # numpad keys\r\n        (185 < c < 193)        || # ;=,-./` (in order)\r\n        (218 < c < 223)          # [\\]' (in order)\r\n        )\r\n\r\n      last = (array)-> array.length && array[array.length - 1]\r\n\r\n      posFor = (pos)->\r\n        if result = (if pos.pos == pos.node.length && pos.node.data[pos.pos - 1] == '\\n' && !(p = pos.save().next()).isEmpty() then p else pos).textPosition()\r\n          result.pos = p ? pos\r\n          result\r\n\r\n      replacements =\r\n        '<': \"&lt;\"\r\n        '>': \"&gt;\"\r\n        '&': \"&amp;\"\r\n\r\n      escapeHtml = (str)->\r\n        if typeof str == 'string' then str.replace /[<>&]/g, (c)-> replacements[c]\r\n        else str\r\n\r\n      findEditor = (node)->\r\n        target = $(node)\r\n        while target.length && !($(target).data().editor instanceof LeisureEditCore)\r\n          target = $(target).parent()\r\n        target.data()?.editor\r\n\r\n`preserveSelection` -- restore the current selection after func() completes.  This may\r\nwork better for you than LeisureEditCore.savePosition because it always preserves the\r\nselection, regardless of the current value of LeisureEditCore.editing.\r\n\r\n      preservingSelection = null\r\n\r\n      preserveSelection = (func)->\r\n        if preservingSelection then func preservingSelection\r\n        else if $(document.activeElement).is 'input[input-number],textarea[input-number]'\r\n          num = document.activeElement.getAttribute 'input-number'\r\n          parentId = $(document.activeElement).closest('[data-view-block-name]').prop 'id'\r\n          if !parentId then parentId = $(document.activeElement).closest('[data-block]').prop 'id'\r\n          input = document.activeElement\r\n          start = input.selectionStart\r\n          end = input.selectionEnd\r\n          try\r\n            func\r\n              type: 'None'\r\n              scrollTop: 0\r\n              scrollLeft: 0\r\n          finally\r\n            parent = $(\"##{parentId}\")\r\n            if input = parent.find(\"[input-number='#{num}']\")\r\n              input.selectionStart = start\r\n              input.selectionEnd = end\r\n              input.focus()\r\n        else if document.activeElement && !document.activeElement.isContentEditable\r\n          func {type: 'None', scrollTop: 0, scrollLeft: 0}\r\n        else if editor = findEditor getSelection().anchorNode\r\n          # try to use a mark\r\n          if editor.options?.data?.preserveSelectionWithMark\r\n            return editor.options.data.preserveSelectionWithMark func\r\n          preservingSelection = editor.getSelectedDocRange()\r\n          try\r\n            func preservingSelection\r\n          finally\r\n            editor.adjustDocRange preservingSelection, docReplacement\r\n            editor.selectDocRange preservingSelection\r\n            preservingSelection = null\r\n        else func\r\n          type: 'None'\r\n          scrollTop: 0\r\n          scrollLeft: 0\r\n\r\n      wrapDiag = (parent)-> (args...)->\r\n        r = parent.apply this, args\r\n        @diag()\r\n        r\r\n\r\nExports\r\n=======\r\n\r\n      root = {\r\n        LeisureEditCore\r\n        Observable\r\n        BasicEditingOptions\r\n        DataStore\r\n        DataStoreEditingOptions\r\n        defaultBindings\r\n        last\r\n        link\r\n        blockText\r\n        posFor\r\n        escapeHtml\r\n        findEditor\r\n        copyBlock\r\n        preserveSelection\r\n        treeToArray\r\n        computeNewStructure\r\n        getEventChar\r\n        useEvent\r\n        getSelection\r\n        modifyingKey\r\n        $\r\n        set$\r\n      }\r\n"
  ]
}