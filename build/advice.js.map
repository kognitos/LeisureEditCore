{
  "version": 3,
  "file": "advice.js",
  "sourceRoot": "..",
  "sources": [
    "advice.litcoffee"
  ],
  "names": [],
  "mappings": ";AAkCe;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAEX,MAAA,CAAO,EAAP,EAAW,QAAA,CAAA,CAAA;AAqBf,QAAA,MAAA,EAAA,MAAA,EAAA,WAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA,EAAA;IAAM,CAAA,QAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;aACE,YAAA,CAAc,MAAd,EAAsB,IAAtB,EACE;QAAA,OAAA,EAAS;UAAA,WAAA,EAAc,WAAA,CAAY,QAAA,CAAC,OAAD,CAAA;mBACjC,OAAQ,CAAC,GAAT,CAAa,CAAA,SAAA,CAAA,CAAa,OAAb,CAAA,CAAb;UADiC,CAAZ;QAAd,CAAT;QAEA,QAAA,EAAW;UAAA,IAAA,EAAM,QAAA,CAAC,MAAD,CAAA;mBAAW,QAAA,CAAC,QAAD,CAAA;AACtC,kBAAA;AAAY;uBACG,MAAA,CAAO,QAAP,EADH;eAEC,aAAA;gBAAM;gBACL,WAAA,CAAY,GAAZ;gBACA,MAAO,IAFR;;YAHyB;UAAX;QAAN;MAFX,CADF;IADF,CAAA;IAeA,CAAA,QAAA,CAAA,CAAA,EAAA;;;aAAG;;;;;;;;;;;;;;;;;;;;IAAH,CAAA;IAqBC,YAAA,GAAe,QAAA,CAAC,MAAD,EAAS,IAAT,EAAe,MAAf,CAAA;MACd,IAAG,IAAH;eAAa,MAAA,CAAO,MAAP,EAAe,MAAf,EAAb;OAAA,MAAA;eACK,QAAA,CAAS,MAAT,EAAkB,MAAlB,EADL;;IADc,EApCtB;;;;;;IA8CM,YAAA,GAAe,QAAA,CAAC,GAAD,CAAA;aACX,QAAA,CAAC,MAAD,CAAA;eAAW,QAAA,CAAA,GAAC,IAAD,CAAA;UACX,GAAG,CAAC,KAAJ,CAAU,IAAV,EAAgB,IAAhB;iBACC,MAAM,CAAC,KAAP,CAAa,IAAb,EAAmB,IAAnB;QAFU;MAAX;IADW,EA9CrB;;;;;;;IA0DM,WAAA,GAAc,QAAA,CAAC,GAAD,CAAA;aACV,QAAA,CAAC,MAAD,CAAA;eAAW,QAAA,CAAA,GAAC,IAAD,CAAA;AACrB,cAAA;UAAY,CAAA,GAAI,MAAM,CAAC,KAAP,CAAc,IAAd,EAAoB,IAApB;UACN,GAAG,CAAC,KAAJ,CAAU,IAAV,EAAgB,IAAhB;iBACC;QAHU;MAAX;IADU,EA1DpB;;;IAmEa,SAAP,MAAA,OAAA;MACE,WAAc,OAAA,EAAU,QAAV,CAAA;QAAC,IAAC,CAAA;QACb,IAAC,CAAA,SAAD,GAAa,CAAA;QACd,IAAC,CAAA,WAAD,GAAgB,CAAA;QAChB,IAAC,CAAA,MAAD,GAAU,CAAA;QACV,IAAG,CAAC,QAAJ;UAAmB,IAAC,CAAA,MAAD,CAAA,EAAnB;;MAJY;;MAKb,MAAQ,CAAC,MAAD,CAAA;AAAU,YAAA,CAAA,EAAA,GAAA,EAAA;QAAC,IAAG,CAAC,IAAC,CAAA,OAAL;UAClB,IAAG,MAAH;YAAgB,IAAC,CAAA,oBAAD,CAAsB,MAAtB,EAAhB;WAAA,MAAA;YAEG,IAAG,CAAC,IAAC,CAAA,MAAM,CAAC,MAAZ;cAAwB,IAAC,CAAA,MAAM,CAAC,MAAR,GAAiB,KAAzC;aAAA,MACM,IAAG,IAAC,CAAA,MAAM,CAAC,MAAR,KAAkB,IAArB;cACH,MAAM,IAAI,KAAJ,CAAU,6CAAV,EADH;;AAEL;YAAA,KAAA,qCAAA;;cACC,IAAE,CAAA,oBAAF,CAAwB,MAAxB;YADD,CALJ;;UAOA,IAAC,CAAA,OAAD,GAAW;iBACX,KATkB;;MAAX;;MAUR,OAAS,CAAC,MAAD,CAAA;AAAU,YAAA,CAAA,EAAA,GAAA,EAAA;QAAC,IAAG,IAAC,CAAA,OAAJ;UACnB,IAAG,MAAH;YACE,IAAC,CAAA,MAAM,CAAC,MAAD,CAAP,GAAmB,IAAC,CAAA,SAAS,CAAC,MAAD;YAC7B,OAAO,IAAC,CAAA,SAAS,CAAE,MAAF;YACjB,IAAG,CAAC,CAAC,OAAF,CAAU,IAAC,CAAA,SAAX,CAAH;cAA6B,IAAC,CAAA,OAAD,CAAA,EAA7B;aAHF;WAAA,MAAA;AAKG;YAAA,KAAA,qCAAA;;cACE,IAAC,CAAA,MAAM,CAAC,MAAD,CAAP,GAAkB,IAAE,CAAA,SAAS,CAAC,MAAD;YAD/B;YAED,IAAC,CAAA,SAAD,GAAa,CAAA;YACZ,OAAO,IAAC,CAAA,MAAM,CAAC;YACf,IAAC,CAAA,OAAD,GAAW,MATd;;iBAUC,KAXkB;;MAAX;;MAYV,MAAQ,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,CAAA;AAChB,YAAA;QAAU,GAAA,GAAM,CAAA,CAAA,CAAG,MAAH,CAAA,CAAA,CAAA,CAAc,IAAd,CAAA;QACN,IAAC,CAAA,MAAM,CAAC,GAAD,CAAP,GAAe;QACf,IAAG,CAAC,IAAC,CAAA,WAAW,CAAC,MAAD,CAAhB;UAA8B,IAAC,CAAA,WAAW,CAAE,MAAF,CAAZ,GAAwB,GAAtD;;QACC,IAAC,CAAA,WAAW,CAAC,MAAD,CAAQ,CAAC,IAArB,CAA0B,GAA1B;QACD,IAAG,IAAC,CAAA,OAAJ;UAAiB,IAAC,CAAA,oBAAD,CAAsB,MAAtB,EAAjB;;eACC;MANK;;MAOR,QAAU,CAAC,MAAD,EAAU,IAAV,CAAA;AAClB,YAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA;QAAW,IAAG,CAAC,IAAJ;AAAc;UAAA,KAAA,sCAAA;;YACb,IAAC,CAAA,YAAD,CAAc,MAAd,EAAuB,IAAvB;UADa,CAAd;SAAA,MAAA;UAGE,GAAA,GAAM,CAAA,CAAA,CAAG,MAAH,CAAA,CAAA,CAAA,CAAa,IAAb,CAAA;UACN,qDAAuB,CAAE,gBAAtB,KAAgC,CAAnC;YACC,IAAC,CAAA,OAAD,CAAU,MAAV;YACA,OAAQ,IAAC,CAAA,WAAW,CAAC,MAAD,EAFrB;WAAA,MAAA;YAGI,CAAC,CAAC,MAAF,CAAS,IAAC,CAAA,WAAV,EAAwB,QAAA,CAAC,CAAD,CAAA;qBAAM,CAAA,KAAK;YAAX,CAAxB,EAHJ;;UAIA,OAAO,IAAC,CAAA,MAAM,CAAC,GAAD,EARhB;;eASD;MAVQ;;MAWV,oBAAuB,CAAC,MAAD,CAAA;QACrB,IAAG,CAAC,IAAE,CAAA,SAAS,CAAC,MAAD,CAAf;UACE,IAAC,CAAA,SAAS,CAAC,MAAD,CAAV,GAAqB,IAAC,CAAA,MAAM,CAAC,MAAD;iBAC5B,IAAC,CAAA,MAAM,CAAC,MAAD,CAAP,GAAmB,CAAA,GAAC,IAAD,CAAA,GAAA;mBACjB,IAAC,CAAA,UAAD,CAAY,IAAC,CAAA,WAAY,CAAC,MAAD,CAAQ,CAAC,MAAtB,GAA+B,CAA3C,EAA8C,IAAC,CAAA,WAAW,CAAC,MAAD,CAA1D,EAAoE,MAApE,EAA4E,IAA5E;UADiB,EAFrB;;MADqB;;MAKvB,UAAY,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,IAAvB,CAAA;AACpB,YAAA;QAAU,IAAA,GAAU,KAAA,GAAQ,CAAX,GAAkB,IAAC,CAAA,SAAS,CAAC,MAAD,CAA5B,GACF,IAAC,CAAA,MAAM,CAAC,KAAK,CAAC,KAAD,CAAN,CAAP,CAAwB,CAAA,GAAC,IAAD,CAAA,GAAA;iBAC3B,IAAC,CAAA,UAAD,CAAY,KAAA,GAAS,CAArB,EAAwB,KAAxB,EAA+B,MAA/B,EAAuC,IAAvC;QAD2B,CAAxB;eAEJ,IAAI,CAAC,KAAL,CAAW,IAAC,CAAA,MAAZ,EAAoB,IAApB;MAJS;;IAnDd;IAyDA,MAAA,GAAU,QAAA,CAAC,MAAD,EAAS,MAAT,EAAiB,IAAjB,EAAuB,GAAvB,CAAA;AAChB,UAAA,MAAA,EAAA,IAAA,EAAA,GAAA,EAAA;MAAS,IAAG,OAAO,MAAP,KAAiB,QAApB;AACE;QAAA,KAAA,cAAA;;;;AACC;YAAA,KAAA,cAAA;;4BACI,MAAA,CAAO,MAAP,EAAe,IAAf,EAAqB,IAArB,EAA2B,GAA3B;YADJ,CAAA;;;QADD,CAAA;uBADF;OAAA,MAAA;eAIK,uCAAiB,IAAI,MAAJ,CAAW,MAAX,CAAjB,CAAoC,CAAC,MAArC,CAA4C,MAA5C,EAAoD,IAApD,EAA0D,GAA1D,EAJL;;IADO;IAOV,QAAA,GAAY,QAAA,CAAC,MAAD,EAAS,MAAT,EAAiB,IAAjB,CAAA;AAClB,UAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA;MAAS,IAAG,OAAO,MAAP,KAAiB,QAApB;AACE;QAAA,KAAA,cAAA;;;;AACC;YAAA,KAAA,cAAA;;4BACE,QAAA,CAAS,MAAT,EAAiB,IAAjB,EAAwB,IAAxB;YADF,CAAA;;;QADD,CAAA;uBADF;OAAA,MAAA;kDAIiB,CAAE,QAAf,CAAwB,MAAxB,EAAgC,IAAhC,WAJJ;;IADS;IAOZ,YAAA,GAAiB,QAAA,CAAC,MAAD,EAAU,MAAV,EAAA,GAAkB,IAAlB,CAAA;AACvB,UAAA,GAAA,EAAA,IAAA,EAAA;aAAS,2HAAuC,MAAM,CAAC,MAAD,CAA7C,CAAuD,CAAC,KAAxD,CAA8D,MAA9D,EAAuE,IAAvE;IADc;WAGjB,CACG,YADH,EAEE,YAFF,EAGE,WAHF,EAIE,MAJF,EAKE,QALF,EAME,YANF;EAlKS,CAAX;AAFW",
  "sourcesContent": [
    "Advice\r\n======\r\nCopyright (C) 2015, Bill Burdick, Roy Riggs, TEAM CTHULHU\r\n\r\nLicensed with ZLIB license (see \"[License](#license)\", below).\r\n\r\nAdvice is part of Leisure project.  You can find it on\r\n[Github](https://github.com/zot/Leisure).\r\n\r\nLicensed with ZLIB license.\r\n=============================\r\n\r\nThis software is provided 'as-is', without any express or implied\r\nwarranty. In no event will the authors be held liable for any damages\r\narising from the use of this software.\r\n\r\nPermission is granted to anyone to use this software for any purpose,\r\nincluding commercial applications, and to alter it and redistribute it\r\nfreely, subject to the following restrictions:\r\n\r\n1. The origin of this software must not be misrepresented; you must not\r\nclaim that you wrote the original software. If you use this software\r\nin a product, an acknowledgment in the product documentation would be\r\nappreciated but is not required.\r\n\r\n2. Altered source versions must be plainly marked as such, and must not be\r\nmisrepresented as being the original software.\r\n\r\n3. This notice may not be removed or altered from any source distribution.\r\n\r\nCode\r\n====\r\n\r\n<a id='Method_Advice'></a>\r\nMethod Advice\r\n\r\n    define [], ->\r\n\r\n\r\nchangeAdvice(object, flag, advice) is the main API method.  Using\r\nadvice will add an \"ADVICE\" property to object.\r\n\r\n- object is the object that has methods you want to override (numbers won't work)\r\n- flag turns on and off the advice\r\n- advice is an object with a property for each method you want to override\r\n  - each property contains another object with a property, which labels the advice\r\n  - the property's value should be the advice (if you're adding advice)\r\n\r\nCalling changeAdvice with true will preserve the original methods and\r\nwrap them with your advice\r\n\r\nCalling changeAdvice with false will restore the original methods.\r\n\r\nWhen you specify advice, you can use beforeMethod and afterMethod to\r\ncreate the advice or you can just provide a function that takes the\r\nparent function and returns the function to run in its place.\r\n\r\n      ->\r\n        changeAdvice object, true,\r\n          setName: monitorName: afterMethod (newName)->\r\n            console.log \"Set name #{newName}\"\r\n          setOwner: diag: (parent)-> (newOwner)->\r\n            try\r\n              parent newOwner\r\n            catch err\r\n              dispayError err\r\n              throw err\r\n\r\nHere's that same example in JavaScript with the functions declared\r\nseparately for clarity.  Keep in mind that these functions will be\r\nused as methods on object, so you can use \"this\" in them.\r\n\r\n      -> `\r\n        function monitorName(newName) {\r\n          console.log(\"Set name \" + newName);\r\n        }\r\n        function diagSetOwner(parent) {\r\n          return function (newOwner) {\r\n            try {\r\n              return parent(newOwner);\r\n            } catch (err) {\r\n              dispayError(err);\r\n              throw err;\r\n            }\r\n          };\r\n        }\r\n\r\n        changeAdvice(object, true, {\r\n          setName: {monitorName: afterMethod(monitorName)},\r\n          setOwner: {diag: diagSetOwner}\r\n        });\r\n      `\r\n\r\n      changeAdvice = (object, flag, advice)->\r\n        if flag then advise object, advice\r\n        else unadvise object, advice\r\n\r\nbeforeMethod(def) takes a function to run before the method you are\r\nadvising.  It will run as a method on the object and take the same\r\narguments as the original method.  After it runs, the original method\r\nwill run and its result will be returned (so you can return whatever\r\nyou want from your definition).\r\n\r\n      beforeMethod = (def)->\r\n        (parent)-> (args...)->\r\n          def.apply this, args\r\n          parent.apply this, args\r\n\r\nafterMethod(def) takes a function to run after the method you are\r\nadvising.  It will run as a method on the object and take the same\r\narguments as the original method.  The original method will run, then\r\nyour supplied function will run, then the return value from the\r\noriginal method will be returned (so you can return whatever you want\r\nfrom your definition).\r\n\r\n      afterMethod = (def)->\r\n        (parent)-> (args...)->\r\n          r = parent.apply this, args\r\n          def.apply this, args\r\n          r\r\n\r\nLow Level Code\r\n==============\r\n\r\n      class Advice\r\n        constructor: (@target, disabled)->\r\n          @originals = {}\r\n          @adviceOrder = {}\r\n          @advice = {}\r\n          if !disabled then @enable()\r\n        enable: (method)-> if !@enabled\r\n          if method then @installAdviceHandler method\r\n          else\r\n             if !@target.ADVICE then @target.ADVICE = this\r\n             else if @target.ADVICE != this\r\n               throw new Error \"Attempt to install advice on advised object\"\r\n             for method in @advice\r\n               @installAdviceHandler method\r\n          @enabled = true\r\n          this\r\n        disable: (method)-> if @enabled\r\n          if method\r\n            @target[method] = @originals[method]\r\n            delete @originals[method]\r\n            if _.isEmpty @originals then @disable()\r\n          else\r\n            for method in @advice\r\n              @target[method] = @originals[method]\r\n            @originals = {}\r\n            delete @target.ADVICE\r\n            @enabled = false\r\n          this\r\n        advise: (method, name, def)->\r\n          key = \"#{method}-#{name}\"\r\n          @advice[key] = def\r\n          if !@adviceOrder[method] then @adviceOrder[method] = []\r\n          @adviceOrder[method].push key\r\n          if @enabled then @installAdviceHandler method\r\n          this\r\n        unadvise: (method, name)->\r\n          if !name then for name in @adviceOrder[method] ? []\r\n            @removeAdvice method, name\r\n          else\r\n            key = \"#{method}-#{name}\"\r\n            if @adviceOrder[method]?.length == 1\r\n              @disable method\r\n              delete @adviceOrder[method]\r\n            else _.remove @adviceOrder, (x)-> x == key\r\n            delete @advice[key]\r\n          this\r\n        installAdviceHandler: (method)->\r\n          if !@originals[method]\r\n            @originals[method] = @target[method]\r\n            @target[method] = (args...)=>\r\n              @callAdvice @adviceOrder[method].length - 1, @adviceOrder[method], method, args\r\n        callAdvice: (index, order, method, args)->\r\n          func = if index < 0 then @originals[method]\r\n          else @advice[order[index]]((args...)=>\r\n            @callAdvice index - 1, order, method, args)\r\n          func.apply @target, args\r\n\r\n      advise = (object, method, name, def)->\r\n        if typeof method == 'object'\r\n          for meth, advice of method\r\n            for name, def of advice\r\n              advise object, meth, name, def\r\n        else (object.ADVICE ? new Advice object).advise method, name, def\r\n\r\n      unadvise = (object, method, name)->\r\n        if typeof method == 'object'\r\n          for meth, advice of method\r\n            for name, def of advice\r\n              unadvise object, meth, name\r\n        else object.ADVICE?.unadvise method, name\r\n\r\n      callOriginal = (object, method, args...)->\r\n        (object.ADVICE?.originals?[method] ? object[method]).apply object, args\r\n\r\n      {\r\n        changeAdvice\r\n        beforeMethod\r\n        afterMethod\r\n        advise\r\n        unadvise\r\n        callOriginal\r\n      }\r\n"
  ]
}